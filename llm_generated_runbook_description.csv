runbook name,description
AWSConfigRemediation-DeleteAPIGatewayStage,"AWSConfigRemediation-DeleteAPIGatewayStage: The AWSConfigRemediation-DeleteAPIGatewayStage runbook deletes a stage from an Amazon API Gateway. This runbook can be used when you need to remove an unused or outdated API Gateway stage, such as for cleaning up resources or restricting access. It should be run in the same AWS region as the API Gateway, and AWS Config must be enabled there for the runbook to function. Overall, this automation removes unneeded API Gateway stages to optimize costs and security."
AWSConfigRemediation-EnableAPIGatewayTracing,"AWSConfigRemediation-EnableAPIGatewayTracing: This runbook enables tracing on an Amazon API Gateway stage. It modifies the stage to turn on tracing. This runbook should be used when you want to troubleshoot issues or monitor performance for an API Gateway stage, as tracing provides detailed logs and metrics. The runbook relies on AWS Config being enabled in the region, since AWS Config provides the required permissions to modify the API Gateway stage. Enabling tracing can help debug issues and monitor performance for API Gateway, so this runbook automates that process across stages."
AWSConfigRemediation-UpdateAPIGatewayMethodCaching,"AWSConfigRemediation-UpdateAPIGatewayMethodCaching: It updates the cache settings for API methods in Amazon API Gateway. This runbook modifies the cache TTL setting for API methods to comply with AWS Config rules. It should be used when API methods need to be reconfigured to enable caching for improved performance. Based on the context, this runbook specifically targets the cache method configuration for API Gateway stage resources to adhere to AWS best practices or regulatory requirements. The runbook automates updating API method cache settings, reducing manual efforts to reconfigure APIs."
AWSSupport-TroubleshootAWSBatchJob,"AWSSupport-TroubleshootAWSBatchJob: This runbook troubleshoots issues that prevent an AWS Batch job from progressing from RUNNABLE to STARTING status in AWS Batch. It checks compute environment state, resource allocation, permissions, and integration with Amazon ECS to identify why a job is stuck. This runbook should be used when AWS Batch jobs are stuck in RUNNABLE state to diagnose and resolve underlying issues. It must be run in the same region as the target job and works for jobs on Amazon ECS, AWS Fargate or Amazon EC2. For Amazon EKS jobs, it exits. If container instances fail to register with Amazon ECS, it triggers the AWSSupport-TroubleshootECSContainerInstance runbook for further diagnosis."
AWS-DeleteCloudFormationStack,"AWS-DeleteCloudFormationStack: It deletes an AWS CloudFormation stack in the target AWS account. This runbook should be used when you need to remove an existing CloudFormation stack that is no longer required. It can help automate the deletion of CloudFormation stacks across accounts and regions. Consider using this runbook when cleaning up old stacks, consolidating stacks, or removing stacks created for testing. The runbook takes the stack name and AWS region as input parameters. It uses the AWS SDK to call the DeleteStack API to delete the target stack. This automates the manual process of deleting CloudFormation stacks via the console or CLI. As noted in the description, this runbook targets AWS CloudFormation stacks specifically."
AWS-RunCfnLint,"AWS-RunCfnLint: This runbook that validates AWS CloudFormation templates. It uses the cfn-python-lint tool to check YAML and JSON templates against the AWS CloudFormation resource specification. This runbook performs additional validation like ensuring valid values for resource properties. If validation fails, the runbook fails and outputs the linter error message. This runbook helps validate CloudFormation templates before deployment. It should be used when creating new templates or updating existing ones to catch issues early. RunCfnLint can help avoid template creation errors and speed up development cycles."
AWSSupport-TroubleshootCFNCustomResource,"AWSSupport-TroubleshootCFNCustomResource: This runbook diagnoses issues with AWS CloudFormation stacks failing to create, update, or delete custom resources. It checks the service token and error message returned for the custom resource. After reviewing the custom resource details, it provides an explanation of the stack behavior and troubleshooting steps. Use this runbook when CloudFormation stacks encounter errors with custom resources to understand the cause and resolve the issues. It analyzes the custom resource configuration and runtime errors to pinpoint the problem. This runbook is useful for debugging CloudFormation stacks relying on custom resources."
AWS-UpdateCloudFormationStack,"AWS-UpdateCloudFormationStack: It updates an existing AWS CloudFormation stack using a template stored in an Amazon S3 bucket. This runbook automates updating the resources defined in a CloudFormation stack without having to manually make changes through the console. It should be used when you need to apply changes to the configuration of resources defined in a CloudFormation stack, like updating settings or replacing resources. This is useful for keeping your infrastructure up-to-date and avoiding manual steps. Specifically, it takes a CloudFormation template from S3 and uses it to update the target CloudFormation stack."
AWSConfigRemediation-EnableCloudFrontDefaultRootObject,"AWSConfigRemediation-EnableCloudFrontDefaultRootObject: This runbook configures the default root object for an Amazon CloudFront distribution. It sets the default root object, which is returned when the requested object is not found in the distribution. This runbook should be used when you want to customize the default object returned by CloudFront when a requested object is not found. It can help provide a custom 404 page or default homepage for your CloudFront distribution. Based on the context, this runbook specifically enables and configures the default root object setting for a CloudFront distribution to meet AWS best practices and compliance requirements."
AWSConfigRemediation-EnableCloudFrontAccessLogs,"AWSConfigRemediation-EnableCloudFrontAccessLogs: This runbook enables access logging for Amazon CloudFront distributions. It configures CloudFront to write access logs to an S3 bucket, providing increased visibility into viewer requests. This runbook should be used when you need to enable access logging for a CloudFront distribution, either for security monitoring, debugging, or compliance reasons. The runbook targets CloudFront distributions specifically, making it easy to enable this important logging capability. Given the context that it enables access logging for a specified CloudFront distribution, this runbook is useful for enabling an important troubleshooting and security feature."
AWSConfigRemediation-EnableCloudFrontOriginAccessIdentity,"AWSConfigRemediation-EnableCloudFrontOriginAccessIdentity: This runbook enables origin access identity for a specified Amazon CloudFront distribution. It assigns the same CloudFront Origin Access Identity to all Amazon S3 origins without an existing identity, granting CloudFront access to objects in the S3 bucket. Use this automation to enable origin access identity if needed for a CloudFront distribution accessing S3 origins. You must still update the S3 bucket policy to allow the identity access."
AWSConfigRemediation-EnableCloudFrontOriginFailover,AWSConfigRemediation-EnableCloudFrontOriginFailover: This runbook enables origin failover for Amazon CloudFront distributions. It configures CloudFront to automatically route traffic to a secondary origin when the primary origin returns specific HTTP status code failure responses. This provides high availability by allowing traffic to continue to flow in case of origin failures. This runbook should be used when you want to add redundancy to your CloudFront origins. It modifies the CloudFront distribution configuration based on the ID provided. Consider using this if you need failover capabilities for your CloudFront origins.
AWSConfigRemediation-EnableCloudFrontViewerPolicyHTTPS,"AWSConfigRemediation-EnableCloudFrontViewerPolicyHTTPS: This runbook enables HTTPS protocol for a specified Amazon CloudFront distribution. It modifies the viewer protocol policy to redirect HTTP requests to HTTPS, providing secure connections. This runbook should be used when you want to enforce HTTPS for your CloudFront distribution, ensuring traffic is encrypted in transit. As specified in the context, it targets CloudFront distributions to enable the HTTPS viewer protocol policy. This is useful for security and compliance requirements."
AWSConfigRemediation-CreateCloudTrailMultiRegionTrail,"AWSConfigRemediation-CreateCloudTrailMultiRegionTrail: This runbook creates an AWS CloudTrail trail that delivers log files from multiple AWS regions to an Amazon S3 bucket. It automates the process of enabling CloudTrail across regions to centralize logging and meet compliance requirements. This runbook should be used when you need to quickly setup CloudTrail logging across all regions to track API calls and monitor account activity. It leverages AWS Systems Manager Automation to configure CloudTrail with no manual steps. The runbook description mentions it will create a multi-region CloudTrail trail and send logs to an S3 bucket, allowing centralized logging across regions."
AWS-EnableCloudTrail,"AWS-EnableCloudTrail: This runbook enables CloudTrail logging in an AWS account and configures it to deliver log files to an S3 bucket. It automates the process of creating a trail, specifying the S3 bucket to store logs, and starting log file delivery. This should be used when you need to enable centralized logging across your AWS infrastructure for auditing, security monitoring, and troubleshooting purposes. The runbook handles enabling CloudTrail across all regions and configuring key parameters like log file encryption and log validation. It provides a streamlined way to get CloudTrail logs flowing to S3 without having to manually create trails and configure settings through the console."
AWSConfigRemediation-EnableCloudTrailEncryptionWithKMS,"AWSConfigRemediation-EnableCloudTrailEncryptionWithKMS: This runbook encrypts AWS CloudTrail trails using a specified AWS KMS customer managed key. It should be used to encrypt CloudTrail trails according to security best practices. The runbook encrypts trails but not digest files. If log file validation is enabled, see the CloudTrail user guide for more info. This runbook provides a baseline for encrypting trails, but using multiple keys for multiple trails is recommended."
AWSConfigRemediation-EnableCloudTrailLogFileValidation,"AWSConfigRemediation-EnableCloudTrailLogFileValidation: This runbook enables log file validation for AWS CloudTrail trails in your AWS account. It modifies the CloudTrail trail configuration to enable validation of log files after delivery, helping ensure log file integrity. This runbook should be used when you want to enable additional security for your CloudTrail logs by validating the log files were not tampered with after being delivered to your S3 bucket. As specified in the context, it targets CloudTrail trails to enable log file validation, an important security practice for CloudTrail. The description mentions this runbook enables log file validation specifically for your CloudTrail trails."
AWS-QueryCloudTrailLogs,"AWS-QueryCloudTrailLogs: It creates an Amazon Athena table from an Amazon S3 bucket containing AWS CloudTrail logs. This runbook automates querying CloudTrail logs using Athena without having to manually create tables and manage schemas. It's useful for security analysis, auditing, and troubleshooting by enabling SQL queries over CloudTrail event data. The runbook creates the Athena table, runs specified SQL queries, and then deletes the table when finished. It simplifies analyzing CloudTrail logs by eliminating the need to manually create and manage Athena tables and schemas."
AWS-ConfigureCloudWatchOnEC2Instance,"AWS-ConfigureCloudWatchOnEC2Instance: This runbook enables or disables Amazon CloudWatch detailed monitoring on Amazon EC2 instances. It configures the CloudWatch agent on the target EC2 instance to collect and send metrics to CloudWatch. This runbook automates enabling detailed monitoring when launching new instances or disabling it to reduce costs on non-critical instances. It can be used as part of auto-scaling groups, instance launch configurations, or directly on existing instances. By leveraging this automation, users can easily opt-in to detailed monitoring to gain visibility into resource utilization without manual configuration."
AWS-EnableDocDbClusterBackupRetentionPeriod,"AWS-EnableDocDbClusterBackupRetentionPeriod: This runbook enables automated backup retention for an Amazon DocumentDB cluster. It sets the number of days to retain backups of the cluster. This should be used when you want to enable and configure backup retention for an existing DocumentDB cluster. The runbook modifies cluster settings, so the cluster must be in an available state with a docdb engine type. Enabling backup retention provides the ability to restore cluster data from automated backups over a defined retention period."
AWSConfigRemediation-ConfigureCodeBuildProjectWithKMSCMK,AWSConfigRemediation-ConfigureCodeBuildProjectWithKMSCMK: This runbook configures AWS CodeBuild projects to encrypt their build artifacts using a specified AWS KMS customer managed key. It enables encryption of sensitive data stored in CodeBuild project artifacts. This runbook should be used when you need to encrypt CodeBuild artifacts for security and compliance reasons. It leverages AWS Config to identify CodeBuild projects that need encryption enabled and uses SSM Automation to configure the encryption. This allows automated remediation of projects to meet encryption policies. Key details are that it targets CodeBuild projects in a specific AWS region and requires AWS Config and AWS KMS to be enabled.
AWSConfigRemediation-DeleteAccessKeysFromCodeBuildProject,"DeleteAccessKeysFromCodeBuildProject: This runbook removes the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables from a specified AWS CodeBuild project. It should be used when you want to delete access keys that were previously configured in a CodeBuild project, as part of hardening the security of your CodeBuild resources. By removing these keys, the project will no longer have access to make API calls using those credentials. This automation ensures CodeBuild projects follow the best practice of not storing credentials within the project configuration."
AWSSupport-TroubleshootCodeDeploy,"AWSSupport-TroubleshootCodeDeploy: This runbook diagnoses and resolves issues with failed AWS CodeDeploy deployments on Amazon EC2 instances. It checks for common problems like missing agents, IAM permissions, S3 objects, AppSpec files, lifecycle hooks, and scale-in events. The runbook outputs troubleshooting steps and best practices to help fix and prevent future CodeDeploy deployment failures. Use this runbook when deployments fail unexpectedly to quickly identify and resolve the underlying cause."
AWSSupport-SetupConfig,"AWSSupport-SetupConfig: It sets up AWS Config to record configuration changes and compliance in an AWS account. This runbook creates an IAM service-linked role, a configuration recorder, and an S3 bucket for AWS Config to store configuration snapshots. It can also be used to enable aggregation of AWS Config data across multiple accounts and regions by specifying aggregator account details. This runbook is useful when initially enabling AWS Config for recording configurations and assessing compliance against desired configurations in an AWS account. It handles the necessary IAM, S3, and AWS Config setup to start collecting configuration history and assessing compliance."
AWS-CreateDSManagementInstance,"AWS-CreateDSManagementInstance: It creates an Amazon EC2 Windows instance to manage AWS Directory Service directories. This runbook automates launching a Windows instance and installing tools needed to manage Directory Service directories like Microsoft Active Directory. It should be used when setting up a new Directory Service directory to have a dedicated Windows server for administration. The runbook launches an EC2 instance and handles configuring it as a Directory Service management instance. Based on the context, this runbook is useful for managing AWS Directory Service but cannot manage AD Connector directories."
AWSSupport-TroubleshootADConnectorConnectivity,"AWSSupport-TroubleshootADConnectorConnectivity: This runbook verifies network connectivity and prerequisites for an AWS Directory Service AD Connector. It checks security group rules, network ACLs, interface VPC endpoints, and launches test EC2 instances to validate connectivity. This runbook should be used when troubleshooting network or connectivity issues with an AD Connector deployment. It automates prerequisite checks and diagnostic connectivity tests to identify potential causes of AD Connector communication failures."
AWSSupport-TroubleshootDirectoryTrust,"AWSSupport-TroubleshootDirectoryTrust: This runbook diagnoses and resolves trust creation issues between an AWS Managed Microsoft AD directory and an on-premises Microsoft Active Directory. It verifies directory type supports trusts, checks associated security groups, network ACLs, and route tables for potential connectivity problems. Use this automation when establishing trusts between AWS Directory Service and on-premises AD to troubleshoot and fix connectivity or network configuration issues. It automates analysis of networking and security to identify misconfigurations blocking directory trust creation."
AWS-EnableAppSyncGraphQLApiLogging,"AWS-EnableAppSyncGraphQLApiLogging: It enables field-level logging and request-level logging for a specified AWS AppSync GraphQL API. This runbook should be used when you want to start capturing detailed logs for an AppSync API to help troubleshoot issues or analyze usage patterns. The runbook will configure logging by updating settings on the target GraphQL API, even if logging is already enabled. Based on the context, this runbook specifically enables two logging features for AppSync: field-level logging that captures resolver-level details, and request-level logging that captures each GraphQL query/mutation. Enabling logging on AppSync APIs can provide valuable insights into API usage and performance."
AWS-EnableAthenaWorkGroupEncryptionAtRest,"AWS-EnableAthenaWorkGroupEncryptionAtRest: It enables encryption at rest for Amazon Athena workgroups. This runbook configures server-side encryption using AWS KMS for data stored in Amazon S3 for the specified workgroup. It should be used when you want to encrypt query results data at rest for compliance, security or data privacy reasons. The runbook enables encryption by associating a KMS key with the Athena workgroup, so query results stored in S3 buckets are encrypted. This provides data protection and helps meet compliance requirements. By specifying the workgroup, this automates the process of enabling encryption rather than manually updating configurations."
AWS-CreateDynamoDBBackup,AWS-CreateDynamoDBBackup: It creates a backup of an Amazon DynamoDB table in the DynamoDB service. This runbook automates taking backups of DynamoDB tables. It should be used when you want to create periodic backups of DynamoDB tables for disaster recovery purposes. Backups allow you to restore DynamoDB tables in case of accidental data loss or database corruption. This runbook can be scheduled to run automatically and save backups to S3. It provides a way to backup DynamoDB tables without taking them offline.
AWS-DeleteDynamoDbBackup,"AWS-DeleteDynamoDbBackup: This runbook deletes backups of Amazon DynamoDB tables in your AWS account. It can be used when you want to remove old or unneeded backups to reduce storage costs or clean up your DynamoDB backups. Specifically, it uses AWS Systems Manager Automation to call the DeleteBackup API and remove the specified backup. This is useful when you no longer require a backup or want to delete outdated backups that are incurring storage charges."
AWSConfigRemediation-DeleteDynamoDbTable,"AWSConfigRemediation-DeleteDynamoDbTable': This runbook deletes a specified DynamoDB table in your AWS account. It should be used when you need to remove an unused or outdated DynamoDB table to reduce costs or clean up your environment. This automation targets DynamoDB, a NoSQL database service, to remove the specified resource. Consider using this if you have identified unused tables via AWS Config that need to be deleted. The runbook simplifies the process of removing a DynamoDB table without needing to manually delete it."
AWS-DeleteDynamoDbTableBackups,"AWS-DeleteDynamoDbTableBackups: This runbook deletes backups of DynamoDB tables based on specified retention days or count. It can be used to automatically remove old backups to reduce storage usage. This runbook targets DynamoDB backups in AWS. It should be used when old backups need to be deleted per a retention policy, or to free up storage space. Specific points from the context: service='DynamoDB', deletes backups based on retention days/count."
AWSConfigRemediation-EnableEncryptionOnDynamoDBTable,"AWSConfigRemediation-EnableEncryptionOnDynamoDBTable: This runbook enables encryption on an Amazon DynamoDB table using a customer managed key from AWS Key Management Service (KMS). It can be used to encrypt sensitive data in a DynamoDB table to meet compliance requirements. The runbook takes a KMS key ID as a parameter, allowing you to specify which key to use for encryption. As DynamoDB tables are not encrypted by default, this runbook provides an automated way to apply encryption through AWS Systems Manager Automation. It should be used when encryption is needed for a DynamoDB table containing sensitive data."
AWSConfigRemediation-EnablePITRForDynamoDbTable,"AWSConfigRemediation-EnablePITRForDynamoDbTable: This runbook enables point-in-time recovery (PITR) for a specified Amazon DynamoDB table. It performs the necessary actions in DynamoDB to turn on automated backups and point-in-time recovery capabilities. This runbook should be used when you want to add disaster recovery capabilities to a DynamoDB table. By enabling PITR, you can restore the table to any point in time during the preceding 35 days. This provides protection against accidental writes or deletes. The runbook targets DynamoDB tables specifically, making it a useful automation tool for adding backup functionality to DynamoDB workloads."
AWS-RestoreDynamoDBTable,"AWS-RestoreDynamoDBTable: It restores an Amazon DynamoDB table using point-in-time recovery (PITR). This runbook should be used when you need to recover a DynamoDB table to a previous state. It performs the restore by creating a new table from a backup at a specified time. The context indicates it can restore a DynamoDB table specified by the user. This runbook enables restoring DynamoDB tables without manual steps, providing an automated way to recover tables to handle disasters or errors."
AWSSupport-AnalyzeEBSResourceUsage,"AWSSupport-AnalyzeEBSResourceUsage: It identifies unused Amazon EBS volumes, snapshots, and machine images to help optimize storage costs. 
The runbook performs the following:
- Checks for an existing S3 bucket or creates a new encrypted one 
- Gathers unused Amazon EBS volumes in available state
- Finds snapshots for deleted volumes 
- Identifies unused Amazon Machine Images
It generates CSV reports on the unused resources and stores them in the S3 bucket. This helps identify orphaned resources to delete and reduce storage costs. 
Use this runbook periodically to optimize Amazon EBS usage. It requires S3 and IAM permissions to access storage and EC2 resources. Review the generated reports and clean up unused volumes, snapshots, and images."
AWS-ArchiveEBSSnapshots,"AWS-ArchiveEBSSnapshots: It archives Amazon Elastic Block Store (EBS) snapshots by specifying either the tag applied to the snapshots or the ID of the EBS volume if the snapshots are untagged. This runbook should be used when you want to archive older EBS snapshots to reduce storage costs. The runbook looks for snapshots older than a specified number of days and archives them to Glacier storage. It can archive snapshots by tag, which is useful if you tag snapshots by purpose or application. Or it can archive snapshots for a specific volume if they are not tagged. This allows automated archiving of older EBS snapshots to reduce storage costs."
AWS-AttachEBSVolume,"AWS-AttachEBSVolume: It attaches an Amazon Elastic Block Store (Amazon EBS) volume to an Amazon Elastic Compute Cloud (Amazon EC2) instance. This runbook automates the process of attaching EBS volumes to EC2 instances in your AWS environment. It can be used when you need to add more disk storage to an existing EC2 instance. The runbook handles attaching the EBS volume, formatting it, and mounting it to the EC2 instance so it is available for use. This eliminates the need to manually attach and configure EBS volumes, saving time and effort. Specifically, it takes care of attaching the volume, updating block device mappings, waiting for the volume to become available, creating a filesystem, mounting the volume, and updating fstab. The runbook accepts parameters such as the instance ID, volume ID, device name, filesystem type, etc. Useful when additional storage is needed for EC2 instances."
AWSSupport-CalculateEBSPerformanceMetrics,"AWSSupport-CalculateEBSPerformanceMetrics: It calculates and publishes Amazon EBS performance metrics to a CloudWatch dashboard for troubleshooting. This runbook can be used when needing to analyze IOPS and throughput of an EBS volume or EC2 instance to diagnose potential performance issues. It accepts an EBS volume ID or EC2 instance ID as input, and outputs a CloudWatch dashboard with graphs of estimated average IOPS and throughput. The dashboard provides visibility into EBS performance over a specified time range. This runbook is useful for diagnosing EBS performance bottlenecks."
AWS-CopySnapshot,"AWS-CopySnapshot: This runbook copies an Amazon EBS snapshot from one region to another or within the same region. It can be used to create a backup snapshot in a different region for disaster recovery purposes or migrate a snapshot to a region closer to your applications. The copied snapshot is an exact replica of the original snapshot, preserving encryption and permissions. This allows you to efficiently replicate snapshots without having to recopy all the data. As an SSM Automation document, AWS-CopySnapshot automates the process of initiating and monitoring the snapshot copy, reducing the manual effort to execute this task."
AWS-CreateSnapshot,AWS-CreateSnapshot: This runbook creates a snapshot of an Amazon Elastic Block Store (EBS) volume in AWS. It can be used to take a backup of an EBS volume attached to an EC2 instance before making changes or as part of a regular backup strategy. The snapshot can be used to restore the volume to a previous state. This runbook is useful when you need to create periodic backups of EBS volumes or take a snapshot before modifying an EC2 instance to preserve the state. It provides an automated way to snapshot EBS volumes without needing to manually create them through the AWS console or CLI.
AWS-DeleteSnapshot,"AWS-DeleteSnapshot: It deletes a snapshot of an Amazon Elastic Block Store (EBS) volume in AWS. This runbook should be used when you need to remove an EBS snapshot that is no longer required. Consider the snapshot ID and region provided in the context. The runbook removes the specified EBS snapshot, freeing up storage space in AWS. It can be used as part of snapshot management to clean up unneeded backups."
AWSConfigRemediation-DeleteUnusedEBSVolume,"AWSConfigRemediation-DeleteUnusedEBSVolume: It deletes unused Amazon Elastic Block Store (Amazon EBS) volumes in your AWS account. This runbook automates finding and removing EBS volumes that are not attached to any Amazon EC2 instances, helping reduce unused resources. It should be used when you want to clean up unused EBS volumes to optimize costs and resource usage, based on AWS Config rules. Specifically, it leverages AWS Config and Systems Manager Automation to identify and remove eligible unattached volumes."
AWS-DeregisterAMIs,"AWS-DeregisterAMIs: It deregisters Amazon Machine Images (AMIs) in Amazon Elastic Compute Cloud (EC2). This runbook searches for AMIs with a specified tag and deregisters them. It should be used when you want to clean up old AMIs that are no longer needed. By specifying a tag, it can selectively deregister AMIs that match that tag, avoiding deregistering AMIs still in use. This automates the process of finding and deregistering obsolete AMIs based on tags, saving time over manual deregistration. It leverages AWS Systems Manager Automation to programmatically deregister AMIs across accounts and regions. Given its description, this runbook helps clean up unused AMIs by deregistering them based on a tag you provide."
AWS-DetachEBSVolume,"AWS-DetachEBSVolume: It detaches an Amazon Elastic Block Store (Amazon EBS) volume from an Amazon Elastic Compute Cloud (Amazon EC2) instance in AWS. This runbook should be used when you need to detach an EBS volume from an EC2 instance, for example to attach it to a different instance or delete it. Consider the provided context that it operates on Amazon EBS volumes and EC2 instances. This automation enables detaching EBS volumes without needing to manually go into the AWS console or use AWS CLI commands. It provides a simple way to automate detaching volumes as part of workflows."
AWSConfigRemediation-EnableEbsEncryptionByDefault,"AWSConfigRemediation-EnableEbsEncryptionByDefault: This runbook enables encryption by default on new Amazon Elastic Block Store (Amazon EBS) volumes in the AWS account and region where it is run. Existing EBS volumes created before running this automation will not be encrypted. This runbook should be used when stronger data encryption is desired for EBS volumes. By enabling encryption by default, new EBS volumes will have an extra layer of data protection. Specific points from the context: This runbook targets the Amazon EBS service and enables encryption on new volumes only. The description states it enables encryption on all new EBS volumes in the target account and region."
AWS-ExtendEBSVolume,"AWS-ExtendEBSVolume: It increases the size of an Amazon EBS volume and extends the file system in Amazon EC2 instances. This runbook should be used when you need to expand the storage capacity of an EC2 instance by increasing the size of its attached EBS volume. It supports extending xfs and ext4 filesystems. Based on the provided service being Amazon EBS and the description mentioning increasing EBS volume size, this runbook automates the process of expanding EBS storage on EC2 instances. It can help avoid manual steps to extend filesystems and volumes when more capacity is needed."
AWSSupport-ModifyEBSSnapshotPermission,"AWSSupport-ModifyEBSSnapshotPermission: This runbook modifies permissions for Amazon Elastic Block Store (EBS) snapshots in AWS. It can make snapshots public or private, and share them across AWS accounts. The runbook automates changing snapshot permissions, which is useful when you need to easily share EBS snapshots with other accounts. It works for both encrypted and unencrypted snapshots, except those encrypted with a default KMS key. Overall, this automation simplifies management of EBS snapshot permissions across accounts."
AWSConfigRemediation-ModifyEBSVolumeType,"AWSConfigRemediation-ModifyEBSVolumeType: This runbook modifies the volume type of an Amazon Elastic Block Store (EBS) volume in AWS. It changes the volume type to a specified type, such as gp2 or io1. The volume then enters an optimizing state as the type change takes effect. This runbook can be used when you need to change the performance characteristics or pricing of an EBS volume by switching it to a different volume type. It is useful for right-sizing storage performance and costs. The runbook automates changing the EBS volume type, eliminating the need to manually make the change."
AWS-ASGEnterStandby,"AWS-ASGEnterStandby: It changes the standby state of an Amazon EC2 instance in an Auto Scaling group to 'EnterStandby'. This runbook can be used when you want to temporarily remove an instance from service, without terminating it, so that it is not serving traffic. The instance remains part of the Auto Scaling group and will be brought back into service later when needed. This can be useful for performing maintenance or troubleshooting on an instance without losing capacity in the group. The runbook targets Amazon EC2 instances and Auto Scaling groups. It should be used when temporary removal of an instance is needed, while retaining it as part of the group for future use."
AWS-ASGExitStandby,"AWS-ASGExitStandby: It takes Amazon EC2 instances out of standby mode in an Auto Scaling group. This runbook should be used when you want to manually activate instances that were placed into standby mode, either for cost savings or to perform maintenance. It targets Amazon EC2 instances and Auto Scaling groups. Consider the provided context that it operates on Amazon EC2 instances that are part of an Auto Scaling group. The generated description is 149 words."
AWS-CreateImage,"AWS-CreateImage: It creates a new Amazon Machine Image (AMI) from an existing Amazon Elastic Compute Cloud (EC2) instance. This runbook automates the process of bundling an EC2 instance into an AMI that can be used to launch new instances. 

This runbook should be used when you need to create a custom AMI from an EC2 instance that has been configured or customized as per your requirements. The resulting AMI can then be used to launch identical instances in the future. Some use cases are: creating a 'golden image' with pre-installed software, creating an AMI from an EC2 instance running a customized application, or creating an AMI to migrate an on-premises server to EC2.

The runbook handles steps like bundling the instance, uploading the bundled image to S3, registering the new AMI, and cleaning up temporary resources. Key context points are that it targets EC2 instances and outputs a ready-to-use AMI."
AWS-DeleteImage,"AWS-DeleteImage: It deletes an Amazon Machine Image (AMI) and associated snapshots in Amazon EC2. This runbook should be used when you need to remove an AMI that is no longer needed. Consider using this runbook when cleaning up old AMIs to save on storage costs or when removing AMIs containing sensitive data. The runbook handles deregistering the AMI from EC2 and deleting associated EBS snapshots, simplifying the process of fully removing an AMI. Use caution when running as it will permanently delete the AMI and snapshots. Check if the AMI is still in use before deleting."
AWS-PatchAsgInstance,"AWS-PatchAsgInstance: It patches Amazon EC2 instances that are part of an Auto Scaling group. This runbook automates the process of patching and updating the EC2 instances with the latest security updates and bug fixes. It should be used when you want to keep your EC2 instances up-to-date and compliant with the latest patches. The runbook handles patching instances in a rolling fashion to avoid application downtime. It checks for the latest approved patches, installs them, and reboots the instances if necessary. By automating patching, this runbook saves time and effort compared to manually patching each EC2 instance. It also ensures consistent and timely patching across your EC2 fleet. The runbook targets EC2 instances that are part of an Auto Scaling group, making it suitable for keeping your autoscaled workloads patched and secure."
AWS-PatchInstanceWithRollback,"AWS-PatchInstanceWithRollback: It patches and updates an Amazon EC2 instance to comply with the specified patch baseline. This runbook rolls back the root volume if the patch or update fails. This runbook should be used when you want to automatically patch your EC2 instances while also implementing a rollback mechanism in case of failure. It utilizes AWS Systems Manager Automation to simplify patch management for EC2 instances. Consider using this runbook for automated patching of critical EC2 instances where rollback is important to maintain uptime and availability. The runbook leverages AWS automation features like patch baselines, instance tagging, and automatic rollbacks."
AWS-QuarantineEC2Instance,"AWS-QuarantineEC2Instance: This runbook quarantines an Amazon EC2 instance by assigning it a restrictive security group that blocks all inbound and outbound traffic. It can be used when you need to quickly isolate an EC2 instance, such as when investigating a potential security incident or compromise. The runbook modifies the instance's security group settings, so changes should be reviewed before running to avoid disrupting legitimate traffic. By quarantining the instance, you can prevent further malicious activity while you investigate the issue. This runbook provides an automated way to restrict access to a compromised EC2 instance."
AWS-ResizeInstance,"AWS-ResizeInstance: It changes the instance type of an Amazon Elastic Compute Cloud (Amazon EC2) instance in the AWS cloud. This runbook automates resizing an EC2 instance to a different instance type. It should be used when you need to scale an EC2 instance up or down to adjust compute capacity or performance. The runbook handles stopping the instance, changing the instance type, and restarting the instance automatically. It provides an automated way to right-size EC2 instances based on changing compute needs mentioned in the context. The generated description is 148 words."
AWS-RestartEC2Instance,"AWS-RestartEC2Instance: It restarts one or more Amazon Elastic Compute Cloud (Amazon EC2) instances in the AWS cloud. This runbook automates restarting EC2 instances, which can be useful when troubleshooting issues or applying updates that require a restart. It should be used when you need to quickly and easily restart EC2 instances without manually connecting and restarting each one. The runbook allows restarting instances across regions and accounts, filtering by tags, and controlling the restart order. It handles error handling and retries. By automating with this runbook, you can save time and effort restarting EC2 instances across your infrastructure."
AWS-SetupJupyter,"AWS-SetupJupyter: It sets up Jupyter Notebook on an Amazon EC2 instance. This runbook automates launching a new EC2 instance from a specified AMI or configuring an existing instance. It installs and configures Jupyter Notebook using a SecureString password stored in Parameter Store. This runbook is useful when you want to quickly spin up a Jupyter Notebook environment for data analysis and machine learning workflows in the cloud. It handles the instance and Jupyter setup, so you can start using Notebook immediately without manual installation and configuration."
AWS-StartEC2Instance,"AWS-StartEC2Instance: It starts one or more Amazon Elastic Compute Cloud (Amazon EC2) instances in your AWS account. This runbook automates starting stopped or terminated EC2 instances by specifying the instance IDs or tags. It should be used when you need to quickly spin up EC2 compute capacity without manually starting instances in the console. The runbook handles all steps required to start EC2 instances, including handling errors and retries. Useful for autoscaling workloads or restarting instances after maintenance. Leverages AWS Systems Manager Automation to programmatically control EC2 instances."
AWS-StopEC2Instance,"AWS-StopEC2Instance: This runbook stops one or more Amazon EC2 instances in the AWS cloud. It can be used to stop instances when they are no longer needed, such as outside of business hours, to reduce costs. The runbook targets Amazon EC2 instances and performs the stop action on them. It should be used whenever you need to stop EC2 instances through automation rather than manually. The runbook allows stopping instances across regions and accounts, filtering by tags, and stopping instances gracefully. Key points from the context are that it stops EC2 instances, can target multiple instances, and works across regions and accounts."
AWS-TerminateEC2Instance,AWS-TerminateEC2Instance: It terminates Amazon EC2 instances in Amazon Web Services (AWS). This runbook should be used when you need to stop and remove EC2 instances that are no longer required. It can help reduce costs by only running instances when necessary. Consider using this automation when right-sizing infrastructure or decommissioning environments. The runbook targets Amazon EC2 and can terminate one or more instances based on provided filters and criteria.
AWS-UpdateLinuxAmi,"AWS-UpdateLinuxAmi: It updates an Amazon Machine Image (AMI) with Linux distribution packages and Amazon software in Amazon EC2. This runbook automates patching and updating an AMI to help maintain it. It should be used when you need to update an AMI with the latest packages and software to keep it up-to-date. Consider using this runbook to easily update AMIs on a schedule or after new updates are released, rather than manually updating each AMI instance. This prevents outdated and vulnerable software versions from being launched from old AMIs."
AWS-UpdateWindowsAmi,"AWS-UpdateWindowsAmi: This runbook that performs automated updates on Windows AMIs in Amazon EC2. This runbook installs all available Windows updates, Amazon software, and Amazon drivers on the target AMI. It then runs Sysprep to generalize the AMI so it can be reused to launch new instances. The resulting updated AMI contains the latest patches and software. This runbook is useful for keeping your Windows AMIs up-to-date and improving security. It should be used regularly on custom Windows AMIs to maintain proper patching. The runbook only works on Windows Server 2008 R2 and later. Instances must have TLS 1.2 enabled and connect to Systems Manager using VPC endpoints if not in us-east-1."
AWSConfigRemediation-EnableAutoScalingGroupELBHealthCheck,"AWSConfigRemediation-EnableAutoScalingGroupELBHealthCheck: It enables health checks for Amazon EC2 Auto Scaling groups in AWS. This runbook configures the specified Auto Scaling group to use Elastic Load Balancing (ELB) health checks. It should be used when you want to ensure instances in an Auto Scaling group are checked for health status using ELB before registering them. By leveraging ELB health checks, Auto Scaling can replace unhealthy instances, helping maintain application availability. This runbook automates enabling ELB health checks, which is a best practice for Auto Scaling groups running critical workloads. Based on the description, it targets Auto Scaling groups in Amazon EC2."
AWSConfigRemediation-EnforceEC2InstanceIMDSv2,"AWSConfigRemediation-EnforceEC2InstanceIMDSv2: This runbook enforces the use of Instance Metadata Service Version 2 (IMDSv2) on a specified Amazon EC2 instance. It should be used when you want to ensure an EC2 instance is configured to use the more secure IMDSv2 for accessing instance metadata. The runbook modifies the instance's metadata options to require IMDSv2 usage. This prevents access to instance metadata through IMDSv1, improving security. Based on the provided context, this runbook targets Amazon EC2 instances specifically. Using this runbook helps secure EC2 instances by enforcing the latest version of the Instance Metadata Service. The generated description is 148 words."
AWSEC2-CloneInstanceAndUpgradeSQLServer,"AWSEC2-CloneInstanceAndUpgradeSQLServer: This runbook that clones an EC2 instance running Windows Server with SQL Server, upgrades the SQL Server version on the cloned instance, and creates an AMI from the upgraded instance. This runbook can upgrade SQL Server 2008/2008 R2/2012/2014/2016/2017 to a newer version, including upgrades across multiple major versions. It creates a temporary instance from the cloned AMI to perform the in-place upgrade, then terminates it after creating a final upgraded AMI. This runbook is useful when you need to upgrade the SQL Server version on an EC2 Windows instance while preserving the instance configuration. It allows testing the upgraded version before switching production workloads to it. The runbook handles the orchestration of cloning, launching temporary instance, performing upgrade, creating final AMI, and cleaning up temporary resources."
AWSEC2-CloneInstanceAndUpgradeWindows,"AWSEC2-CloneInstanceAndUpgradeWindows: This runbook upgrades Windows Server instances to a newer version. It creates an AMI from the source instance, launches a temporary instance from that AMI, performs an in-place upgrade on the temporary instance to the specified TargetWindowsVersion, creates a new AMI from the upgraded temporary instance, and terminates the temporary instance. This runbook can be used to upgrade Windows Server 2008 R2, 2012 R2, 2016, or 2019 instances to a newer version like Windows Server 2016, 2019, or 2022 along supported upgrade paths. It automates the multi-step OS upgrade process, minimizing downtime. Specify the source instance, target AMI name, subnet ID, and other parameters to perform the upgrade. Test the upgraded AMI before switching production workloads to it."
AWSEC2-ConfigureSTIG,"AWSEC2-ConfigureSTIG: This runbook applies Security Technical Implementation Guide (STIG) hardening settings to Amazon EC2 instances to help secure them and achieve compliance with standards created by the Defense Information Systems Agency (DISA). This runbook scans for misconfigurations, runs a remediation script, and installs DoD certificates on Windows AMIs to maintain STIG compliance. It applies supported STIG settings based on the OS and allows choosing low, medium or high compliance categories. This runbook should be used to quickly build compliant EC2 images per DISA STIG standards. It does not install third-party packages but will apply related STIGs if packages are already installed. There are no additional charges for using this runbook."
AWSEC2-PatchLoadBalancerInstance,"AWSEC2-PatchLoadBalancerInstance: It upgrades and patches minor versions of an Amazon EC2 instance attached to a load balancer while minimizing downtime. This runbook should be used when you need to apply security patches or minor upgrades to EC2 instances behind load balancers without dropping user connections. It removes the instance from the load balancer, waits for current connections to drain, runs patches, then reattaches the instance. You can customize the connection draining time. It works for Windows or Linux instances behind Classic Load Balancers, Application Load Balancers, or Network Load Balancers."
AWSEC2-SQLServerDBRestore,"AWSEC2-SQLServerDBRestore This runbook automates restoring Microsoft SQL Server database backups from Amazon S3 to a SQL Server 2017 database running on an Amazon EC2 Linux instance. This runbook can launch a new Ubuntu EC2 instance with SQL Server 2017 if an existing instance is not provided. It supports restoring full, differential and transaction log backups, and can restore multiple database backup files, picking the most recent valid backup of each database automatically. This runbook is useful for migrating an on-premises SQL Server database to AWS, automating backup and restore workflows, or restoring databases to new EC2 instances. It resets the SQL Server SA password each run, so the SA password will need to be reset after the runbook completes."
AWSSupport-ActivateWindowsWithAmazonLicense,"AWSSupport-ActivateWindowsWithAmazonLicense: It activates Windows Server instances in Amazon EC2 with a license provided by Amazon. This runbook configures required key management service settings, routes to Amazon's key servers, and attempts license activation. It should be used when launching new Amazon EC2 Windows instances that need automatic license activation with Amazon-provided licenses. Setting AllowOffline=true allows targeting instances not managed by Systems Manager but requires stopping/starting the instance. It cannot activate BYOL Windows instances."
AWSSupport-AnalyzeAWSEndpointReachabilityFromEC2,"AWSSupport-AnalyzeAWSEndpointReachabilityFromEC2: This runbook analyzes connectivity from an Amazon EC2 instance or elastic network interface to an AWS service endpoint. It checks VPC DNS configuration, existence of AWS PrivateLink endpoint, endpoint policy, and performs reachability analysis using VPC Reachability Analyzer. This runbook can be used to troubleshoot connectivity issues from EC2 to AWS services. It provides detailed analysis of various factors affecting connectivity like DNS, VPC endpoints, security groups etc. The automation cleans up network insights resources created during analysis after completion."
AWSPremiumSupport-ChangeInstanceTypeIntelToAMD,"AWSPremiumSupport-ChangeInstanceTypeIntelToAMD: This runbook automates migrations from Intel to AMD powered Amazon EC2 instances. It supports general purpose, burstable, compute optimized, and memory optimized instance families on the Nitro system. This runbook checks instance health, stop behavior, Auto Scaling group membership, and AMD instance availability before changing the type to reduce downtime and data loss risks. It should be used when migrating existing EC2 instances from Intel to equivalent AMD types. By default it avoids instance store and CloudFormation instances, but parameters can override this. It requires an Enterprise or Business Support Subscription. Consider backing up instances before running this, as stopping instances can result in data loss. The DryRun option lets you validate without actually changing the instance type."
AWSSupport-CheckXenToNitroMigrationRequirements,"AWSSupport-CheckXenToNitroMigrationRequirements: This runbook that verifies if an Amazon EC2 instance running on Xen meets the prerequisites to migrate to a Nitro-based instance type. This runbook checks the root volume is EBS, enaSupport is enabled, ENA and NVMe modules are installed, predictable network interface naming is used, and the OS is supported like RHEL, CentOS, Amazon Linux, Debian, Ubuntu or SLES. It should be used when planning to migrate existing EC2 instances from Xen to Nitro to ensure a successful migration. The checks performed validate instance configuration and dependencies required for the migration to complete successfully."
AWSSupport-ConfigureEC2Metadata,"AWSSupport-ConfigureEC2Metadata: This runbook configures instance metadata service (IMDS) options for Amazon EC2 instances. It can enforce IMDSv2 usage, configure HttpPutResponseHopLimit, and allow/deny metadata access. This runbook should be used when you need to configure IMDS settings for your EC2 instances. As per the description, it helps manage IMDS configuration like enforcing IMDSv2 and controlling metadata access. Using this runbook you can securely configure IMDS as per your requirements for EC2 instances."
AWSSupport-CopyEC2Instance,"AWSSupport-CopyEC2Instance: It creates an AMI of an EC2 instance and launches a new instance from that AMI in a different subnet, Availability Zone, Region or VPC. This runbook automates moving an EC2 instance across subnets, AZs, Regions or VPCs. It should be used when you need to migrate an EC2 instance to a different network location. The runbook branches based on the Region and SubnetId parameters specified. It can copy the AMI across Regions if needed. Before using this runbook, consider snapshotting large EBS volumes, backing up instance store volumes, updating DNS records and handling domain conflicts."
AWSSupport-EnableWindowsEC2SerialConsole,"AWSSupport-EnableWindowsEC2SerialConsole is an automation runbook that enables Amazon EC2 Serial Console, Special Admin Console (SAC), and boot menu on Amazon EC2 Windows instances. This runbook automates the steps to enable these features on instances in running or stopped state, managed or unmanaged by AWS Systems Manager. 
It can be used to troubleshoot boot, network and other issues by providing access to the serial port of EC2 instances. The runbook runs PowerShell scripts for online instances and creates a temporary EC2 instance to make changes offline if needed.
Key points:
- Enables serial console access for Windows EC2 instances 
- Works for instances in running or stopped state
- Can be applied on instances managed or unmanaged by SSM
- Allows troubleshooting of boot and network issues
- Automates enabling serial console instead of manual steps"
AWSSupport-ExecuteEC2Rescue,"AWSSupport-ExecuteEC2Rescue: This runbook uses the EC2Rescue tool to troubleshoot and repair connectivity issues with the specified Amazon EC2 instance running Linux or Windows Server. It should be used when an EC2 instance is unreachable or unresponsive due to network, firewall, or other connectivity problems. The runbook attempts to diagnose and fix issues by checking network settings, security groups, and more. It does not support instances with encrypted root volumes. This automated troubleshooting can quickly resolve common EC2 connectivity problems without manual intervention. By specifying the problematic EC2 instance, this runbook provides a simple way to try restoring accessibility."
AWSSupport-ListEC2Resources,"AWSSupport-ListEC2Resources: It returns information about Amazon EC2 instances and related resources like Amazon Elastic Block Store (Amazon EBS) volumes, Elastic IP addresses, and Amazon EC2 Auto Scaling groups in specified AWS Regions. This runbook should be used when you need to gather inventory of your EC2 resources across Regions. It allows exporting the inventory to an Amazon S3 bucket as a CSV file. The runbook helps collect EC2 resource details across accounts and Regions in a simple automated way."
AWSSupport-ManageRDPSettings,"AWSSupport-ManageRDPSettings: This runbook manages Remote Desktop Protocol (RDP) settings like RDP port and Network Layer Authentication (NLA) in Amazon EC2 instances. It can read and output the current values of these settings. This runbook should be used when you need to modify the RDP configuration on your EC2 instances, for example to enable RDP access or restrict it. Carefully review any changes before running as they impact remote access. This runbook provides an automated way to configure RDP instead of manually editing settings across multiple EC2 instances."
AWSSupport-ManageWindowsService,"AWSSupport-ManageWindowsService: It manages Windows services on Amazon EC2 instances. This runbook can start, stop, restart, pause, or disable any Windows service on the target EC2 instance. It should be used when you need to automate controlling Windows services on your EC2 servers. The runbook acts directly on the target instance to modify the desired service state. It can help automate service management workflows. Use cases include restarting a service after an update or pausing a service for maintenance. Given the runbook targets Amazon EC2, it is suited for Windows-based workloads running in AWS."
AWSSupport-MigrateEC2ClassicToVPC,"AWSSupport-MigrateEC2ClassicToVPC: It migrates an Amazon EC2 instance from EC2-Classic to a VPC. This runbook should be used when you have EC2 instances running in EC2-Classic that need to be migrated to take advantage of the benefits of VPCs like security, isolation and flexibility. The runbook supports migrating HVM EC2 instances with EBS root volumes. Migrating from EC2-Classic to VPC enables you to leverage advanced VPC capabilities like security groups, network ACLs and route tables to control network access. This automated runbook simplifies the migration process."
AWSSupport-MigrateXenToNitroLinux,"AWSSupport-MigrateXenToNitroLinux: This runbook clones, prepares, and migrates an Amazon EC2 Linux Xen instance to a Nitro instance type. It provides two workflow options - Clone&Migrate to clone the instance, test it, and migrate after approval; and FullMigration to also replace the root EBS volume after migration. This runbook should be used when you need to migrate an existing Linux EC2 instance from a Xen hypervisor to a Nitro hypervisor to take advantage of improved performance. It performs checks, updates drivers, changes instance type, and requests approvals via SNS. Consider instance costs, outage time, and OS compatibility before using. The generated description is 148 words."
AWSSupport-ResetAccess,"AWSSupport-ResetAccess: This runbook uses the EC2Rescue tool on an Amazon EC2 instance to reset access. For Windows instances, it re-enables password decryption using the EC2 Console. For Linux instances, it generates and adds a new SSH key pair. This allows you to regain access if you lost your original key pair. The runbook creates a password-enabled AMI from your instance that you can use to launch a new EC2 instance with your own key pair (for Windows). This runbook is useful when you lose access to an EC2 instance due to a lost key pair and need to reset access. It provides a way to recover and regain administrative access to your EC2 instances."
AWSSupport-ResetLinuxUserPassword,"AWSSupport-ResetLinuxUserPassword: It resets the password of a local operating system (OS) user on an Amazon EC2 instance. This runbook stops the target EC2 instance, detaches and attaches the root EBS volume to a temporary EC2 instance to change the password, and then reattaches the volume to the original instance. It can be used when you need to access an EC2 instance through the serial console but have lost the password. Consider backing up the instance and enabling EBS encryption before running this automation."
AWSPremiumSupport-ResizeNitroInstance,"AWSPremiumSupport-ResizeNitroInstance is an AWS Systems Manager Automation runbook that resizes Amazon EC2 instances built on the Nitro System. It changes the instance type while minimizing downtime and risk of data loss. The runbook verifies instance state, stop behavior, tenancy, network interfaces, architecture, and availability zone before resizing. It can roll back changes if checks fail after resizing. This runbook is useful when you need to resize EC2 instances to adjust capacity or performance. Consider using it to scale instances without manual intervention. Specify instance type and target instances directly or via tags. Back up instances before running as it stops instances temporarily during resize."
AWSSupport-RestoreEC2InstanceFromSnapshot,"AWSSupport-RestoreEC2InstanceFromSnapshot: It restores an Amazon Elastic Compute Cloud (Amazon EC2) instance from an Amazon Elastic Block Store (Amazon EBS) snapshot of the root volume. This runbook automates the process of identifying and restoring an EC2 instance that has become unavailable or corrupted. It locates a healthy snapshot of the EC2 instance's root volume, creates a new volume from the snapshot, detaches the original root volume if still attached, attaches the new volume as the root, and restarts the instance. This runbook is useful when an EC2 instance is inaccessible and needs to be restored from a known good state captured in a snapshot. It simplifies and automates the restore process, avoiding the need for manual steps."
AWSSupport-SendLogBundleToS3Bucket,"AWSSupport-SendLogBundleToS3Bucket: This runbook uploads log bundles from EC2 instances to an S3 bucket. It installs EC2Rescue on the target EC2 instance to collect OS logs, then uploads the log bundle to the specified S3 bucket. This can be used when troubleshooting EC2 instances to easily collect logs for analysis. It is especially useful for quickly gathering logs from instances that cannot be connected to directly."
AWSSupport-StartEC2RescueWorkflow,"AWSSupport-StartEC2RescueWorkflow: It runs a provided script on a helper EC2 instance to troubleshoot issues with another EC2 instance. This runbook attaches and mounts the root volume of the problematic EC2 instance to the helper instance. It sets environment variables containing information about the input and offline root volume. The script can then access the offline root volume to perform diagnostics and repairs. This runbook is useful when an EC2 instance is unreachable or unusable, and you need to troubleshoot and fix issues with its root volume offline."
AWSPremiumSupport-TroubleshootEC2DiskUsage,AWSPremiumSupport-TroubleshootEC2DiskUsage: This runbook that diagnoses and attempts to resolve disk space issues on Amazon EC2 instances. It investigates root and non-root disk usage on EC2 instances and tries to mitigate issues by extending volumes and file systems if possible. This runbook orchestrates other runbooks to diagnose the disk usage issue on Windows or Linux and then extend the volumes as needed. It can help troubleshoot low disk space issues on EC2 instances. This runbook requires an Enterprise or Business Support Subscription from AWS. It was built in collaboration with AWS Managed Services to help manage AWS infrastructure efficiently.
AWSSupport-TroubleshootEC2InstanceConnect,"AWSSupport-TroubleshootEC2InstanceConnect: It troubleshoots and detects errors preventing connection to an Amazon EC2 instance using Amazon EC2 Instance Connect. This runbook identifies issues caused by unsupported AMI, missing OS packages, IAM permissions, or network misconfigurations. It should be used when unable to connect to an EC2 instance with EC2 Instance Connect. The runbook checks instance health, supported regions, AMI, metadata reachability, EC2 Instance Connect package installation, SSH configuration, network rules, and IAM permissions. It provides detailed results to identify root cause. The automation takes instance ID, username, connection mode, source IP CIDR, SSH port, and IAM role ARN as inputs. It runs checks using Systems Manager and provides consolidated outputs. This helps diagnose and fix connectivity issues with EC2 Instance Connect."
AWSSupport-TroubleshootRDP,"AWSSupport-TroubleshootRDP: It troubleshoots Remote Desktop Protocol (RDP) connections in Amazon EC2 instances. This runbook should be used when RDP connections to an EC2 instance are failing. It checks common settings like the RDP port, Network Layer Authentication (NLA), and Windows Firewall profiles that may impact RDP connectivity. The runbook can read current values or optionally apply changes by stopping and starting the instance with user approval. Changes to RDP settings should be reviewed before using this runbook."
AWSSupport-TroubleshootSSH,"AWSSupport-TroubleshootSSH: It troubleshoots and attempts to fix common SSH connection issues to Amazon EC2 Linux instances. This runbook installs the Amazon EC2Rescue tool on the target instance to check and remediate SSH connectivity problems. It operates in read-only mode by default, but can optionally apply changes offline by stopping and restarting the instance with user approval. This runbook is useful when you cannot SSH into an EC2 Linux instance due to common SSH issues. It attempts to diagnose and fix the problem without needing physical access to the server."
AWSSupport-TroubleshootSUSERegistration,"AWSSupport-TroubleshootSUSERegistration: This runbook troubleshoots issues with registering Amazon EC2 SUSE Linux Enterprise Server instances with SUSE Update Infrastructure. It identifies why the registration failed by performing checks on the instance. The automation provides steps to resolve any identified issues, or helps troubleshoot them, so the instance can successfully register with SUSE Update Infrastructure. This runbook is useful when trying to determine why an EC2 SUSE instance failed to register for updates through SUSE Infrastructure, and to fix the underlying problem."
AWSSupport-UpgradeWindowsAWSDrivers,"AWSSupport-UpgradeWindowsAWSDrivers: It upgrades or repairs storage and network AWS drivers on the specified EC2 Windows instance by calling SSM Agent to install latest versions. This runbook creates an AMI backup before performing upgrade operations, so the AMI can be secured or deleted after automation completes. The online method restarts the instance while offline method requires instance to be stopped and started. This runbook should be used when outdated AWS drivers on Windows EC2 instance need upgrading. It fails if SSM uses VPC endpoint (except in us-east-1) or run on a domain controller."
AWSSupport-CollectECSInstanceLogs,"AWSSupport-CollectECSInstanceLogs: This runbook that collects operating system and Amazon Elastic Container Service (Amazon ECS) logs from an Amazon EC2 instance. This can help troubleshoot issues with ECS containers running on EC2. The runbook creates temporary directories, copies relevant log files, archives them, and can optionally upload the logs to an S3 bucket. It evaluates the S3 bucket permissions to avoid exposing sensitive logs publicly. This runbook is useful when debugging ECS container issues on EC2 instances, as it gathers all the relevant log data in one place. It should be used when containerized applications on ECS are experiencing problems."
AWS-InstallAmazonECSAgent,AWS-InstallAmazonECSAgent: This runbook installs the Amazon Elastic Container Service (Amazon ECS) agent on Amazon Elastic Compute Cloud (Amazon EC2) instances running Amazon Linux or Amazon Linux 2. It automates the process of setting up an EC2 instance to run ECS tasks and integrate with an ECS cluster. This runbook is useful when provisioning new EC2 instances that will be used as container hosts in an ECS environment. It handles installing the required ECS agent package and configuring the agent to connect to the specified ECS cluster. Using this runbook simplifies ECS host setup and ensures consistency across container instances.
AWS-ECSRunTask,"AWS-ECSRunTask: It runs an Amazon Elastic Container Service (Amazon ECS) task that you specify in the target ECS cluster. This runbook automates launching an ECS task, useful when you need to run containerized workloads on demand or on a schedule. The runbook launches a task based on a task definition, allowing you to run Docker containers without provisioning infrastructure. It can target either Fargate or EC2 launch types. Consider using this runbook when you need to easily run ECS tasks for batch jobs, maintenance tasks etc. without manually launching each time."
AWSSupport-TroubleshootECSContainerInstance,"AWSSupport-TroubleshootECSContainerInstance: This runbook troubleshoots Amazon EC2 instances failing to register with Amazon ECS clusters. It validates the instance user data, IAM instance profile permissions, and network configuration. This should be used when EC2 instances are unable to join ECS clusters. It checks that the instance state is running and the ECS cluster state is active. By reviewing instance configuration, permissions, and connectivity, this runbook helps diagnose and resolve common issues registering EC2 instances to ECS."
AWSSupport-TroubleshootECSTaskFailedToStart,"AWSSupport-TroubleshootECSTaskFailedToStart: This runbook automates troubleshooting an Amazon ECS task that failed to start in an ECS cluster. It analyzes common issues like network connectivity, IAM permissions, VPC endpoints, security groups, secrets, and logging to identify why the task failed. The runbook creates temporary Lambda resources to simulate the task's network connectivity. It should be used when debugging a failed ECS task start in the same region. This runbook helps diagnose issues and fixes configuration problems so ECS tasks start successfully."
AWS-UpdateAmazonECSAgent,"AWS-UpdateAmazonECSAgent: This runbook updates the Amazon Elastic Container Service (Amazon ECS) agent on Amazon Elastic Compute Cloud (Amazon EC2) instances running Amazon Linux or Amazon Linux 2. It can be used to keep ECS agents up-to-date so that ECS clusters can take advantage of the latest features and fixes. This runbook targets a specific EC2 instance, so it is useful when you need to update the ECS agent on select instances rather than updating the entire ECS cluster at once. It should be used on EC2 instances running ECS tasks to ensure they have the most recent agent version."
AWSSupport-CheckAndMountEFS,"AWSSupport-CheckAndMountEFS: This runbook automates mounting an Amazon Elastic File System (Amazon EFS) on a specified Amazon Elastic Compute Cloud (Amazon EC2) instance. It verifies that the prerequisites are met to mount the EFS file system, such as security group rules, and then mounts the file system using either the DNS name or mount target IP address. This can be useful when initially setting up EFS to work with EC2, or troubleshooting connectivity issues between existing EFS mounts and EC2. The runbook handles the necessary steps to mount EFS, reducing manual work and potential misconfiguration."
AWSSupport-CollectEKSInstanceLogs,"AWSSupport-CollectEKSInstanceLogs: This runbook gathers operating system and Amazon EKS logs from an EC2 instance to help troubleshoot issues. It copies log files to temporary directories, compresses them into an archive, and can upload them to an S3 bucket. This runbook is useful when debugging EC2 instances running EKS worker nodes. It collects important diagnostic information, but requires sufficient disk space and secure S3 bucket permissions."
AWS-CreateEKSClusterWithFargateProfile,"AWS-CreateEKSClusterWithFargateProfile: It creates an Amazon Elastic Kubernetes Service (Amazon EKS) cluster using AWS Fargate in Amazon EKS. This runbook automates the process of deploying a Kubernetes cluster with Fargate profiles, which allows you to run pods on Fargate without the need to manage EC2 instances. This runbook should be used when you want to easily create an EKS cluster and run Kubernetes workloads on Fargate. It handles provisioning the EKS control plane, creating required IAM roles, VPC configuration, security groups and Fargate profiles. Using this simplifies EKS cluster deployment and managing infrastructure for Kubernetes workloads. Key points from the context are that it creates an EKS cluster, uses Fargate to run pods, and automates the provisioning process."
AWS-CreateEKSClusterWithNodegroup,"AWS-CreateEKSClusterWithNodegroup: It creates an Amazon Elastic Kubernetes Service (Amazon EKS) cluster and node group on AWS. This runbook automates the process of launching EKS clusters with worker nodes, ideal for deploying Kubernetes applications. It can be used when starting a new Kubernetes environment on AWS or scaling capacity of an existing EKS cluster. The runbook launches EKS control plane and configures node groups to register as worker nodes with the cluster. It handles networking, IAM roles, and other configuration automatically. Useful for developers or DevOps teams looking to simplify EKS cluster deployment."
AWS-DeleteEKSCluster,"AWS-DeleteEKSCluster: This runbook deletes the resources associated with an Amazon EKS cluster, including node groups and Fargate profiles. It can optionally delete self-managed nodes, AWS CloudFormation stacks for nodes, and the VPC for the cluster. This runbook is useful when you want to completely remove an EKS cluster and associated resources. Before running it, you may need to delete Kubernetes services with external IPs, as they are tied to load balancers that prevent cluster deletion. Overall, this automation simplifies fully removing an EKS cluster after proper cleanup."
AWS-MigrateToNewEKSSelfManagedNodeGroup,"AWS-MigrateToNewEKSSelfManagedNodeGroup: This runbook migrates workloads from an existing node group to a newly created self-managed node group in Amazon Elastic Kubernetes Service (Amazon EKS). It creates a new node group and drains pods from the old node group to the new one. This allows moving applications to new infrastructure while minimizing downtime. Use this runbook when you need to upgrade the EC2 instances or Kubernetes version underlying your EKS cluster, or want to modify the configuration of the node group. It handles creating the new node group and migrating pods between old and new groups."
AWSPremiumSupport-TroubleshootEKSCluster,"AWSPremiumSupport-TroubleshootEKSCluster: This runbook diagnoses common issues with Amazon Elastic Kubernetes Service (Amazon EKS) clusters, underlying infrastructure, and provides recommended remediation steps. This runbook evaluates cluster health, node groups, networking, IAM roles, and other EKS components to identify misconfigurations or other problems. It generates a detailed report with troubleshooting steps that can help restore proper cluster functionality. This runbook is useful for troubleshooting production EKS clusters that are experiencing availability or performance problems. It can help identify root causes and provide corrective actions to resolve cluster issues."
AWSSupport-TroubleshootEKSWorkerNode,"AWSSupport-TroubleshootEKSWorkerNode: This runbook analyzes an Amazon EC2 worker node and Amazon EKS cluster to identify and troubleshoot issues preventing worker nodes from joining the EKS cluster. It provides guidance to resolve identified issues. This runbook should be used when worker nodes fail to join an EKS cluster due to connectivity, configuration, or other common issues. It requires the EC2 instance and EKS cluster to be in running and active states respectively. The runbook automates troubleshooting to quickly diagnose and resolve worker node connection issues in EKS."
AWS-UpdateEKSCluster,"AWS-UpdateEKSCluster: It updates an Amazon Elastic Kubernetes Service (Amazon EKS) cluster to a specified Kubernetes version. This runbook automates updating the control plane and node groups in an EKS cluster. It should be used when you want to upgrade your EKS cluster to a newer Kubernetes version to take advantage of new features and security updates. The runbook handles draining worker nodes, updating the control plane, and updating node groups to the target version. It provides an automated way to keep your EKS clusters up-to-date. Based on the description, this runbook helps update EKS clusters to desired Kubernetes versions."
AWS-UpdateEKSManagedNodeGroup,"AWS-UpdateEKSManagedNodeGroup: This runbook updates Amazon Elastic Kubernetes Service (Amazon EKS) managed node groups. It can perform version updates to update the Kubernetes version or configuration updates to adjust resources like instance types. This runbook should be used when you need to update EKS managed node groups, for example to update to a newer Kubernetes version or resize nodes to meet changing demands. It utilizes AWS Systems Manager Automation to update node groups in a consistent and repeatable way across accounts and regions. Based on the provided context, this runbook focuses on EKS managed node groups specifically, rather than self-managed node groups."
AWS-UpdateEKSSelfManagedLinuxNodeGroups,"AWS-UpdateEKSSelfManagedLinuxNodeGroups: This runbook updates self-managed node groups in Amazon EKS clusters using AWS CloudFormation stacks. It should be used when you need to update or modify existing self-managed node groups in EKS. Before running this, scale your EKS cluster down to 2 nodes. You must have kubectl installed. This runbook automates updating node groups, saving time compared to manual updates. Consider scaling your EKS cluster down before running and having kubectl installed based on the provided context. The generated description is 148 words."
AWSSupport-CollectElasticBeanstalkLogs,"AWSSupport-CollectElasticBeanstalkLogs: This runbook gathers Elastic Beanstalk logs from an EC2 instance to help troubleshoot issues. It copies log files to temporary directories, compresses them into an archive, and uploads the bundle to an S3 bucket. This can increase CPU utilization on the instance. The runbook evaluates the S3 bucket policy to ensure security of logs. It requires 500MB disk space on the root EBS volume. Use this runbook when debugging Elastic Beanstalk environments to collect comprehensive logs from EC2 instances."
AWSConfigRemediation-EnableElasticBeanstalkEnvironmentLogStreaming,"AWSConfigRemediation-EnableElasticBeanstalkEnvironmentLogStreaming: This runbook enables logging for a specified AWS Elastic Beanstalk environment. It configures the environment to stream logs to Amazon CloudWatch Logs. This should be used when you need to troubleshoot issues or monitor an Elastic Beanstalk environment by viewing its logs in CloudWatch. The runbook targets Elastic Beanstalk environments specifically, making it easy to start collecting logs for an environment. Given the context that it enables log streaming for Elastic Beanstalk, this runbook is useful when you need more observability into an Elastic Beanstalk workload."
AWSConfigRemediation-EnableBeanstalkEnvironmentNotifications,"AWSConfigRemediation-EnableBeanstalkEnvironmentNotifications: This runbook enables notifications for a specified AWS Elastic Beanstalk environment. It configures the environment to send notifications about events like application version deployments, configuration changes, and environment health. This runbook should be used when you want to monitor an Elastic Beanstalk environment by receiving notifications about key events. It is useful for DevOps teams to stay informed about deployments and issues. Based on the description, this runbook specifically targets Elastic Beanstalk environments to enable notifications, which can improve observability."
AWSSupport-TroubleshootElasticBeanstalk,"AWSSupport-TroubleshootElasticBeanstalk: This runbook automates diagnosing and troubleshooting issues with AWS Elastic Beanstalk environments that are in a Degraded or Severe state. It checks the configuration and network connectivity of various resources like load balancers, CloudFormation stacks, Auto Scaling groups, EC2 instances, VPCs, security groups, route tables, and subnets associated with the Elastic Beanstalk environment. It also verifies public internet access, load balancer status, EC2 instance status, and can retrieve log bundles from the environment which can be uploaded to AWS Support. This runbook is useful for quickly investigating and resolving problems with Elastic Beanstalk environments."
AWSConfigRemediation-DropInvalidHeadersForALB,"AWSConfigRemediation-DropInvalidHeadersForALB: This runbook configures an Application Load Balancer in AWS to drop invalid HTTP headers. It modifies the load balancer attributes to enable the removal of headers that contain invalid characters or are otherwise malformed. This runbook should be used when you want to improve security by preventing attacks that rely on injecting bad headers. As specified in the context, it targets Application Load Balancers in the Elastic Load Balancing service. By dropping invalid headers, it can help prevent issues like HTTP header injection attacks against web applications behind the load balancer."
AWS-EnableCLBConnectionDraining,AWS-EnableCLBConnectionDraining: This runbook enables connection draining on a Classic Load Balancer (CLB) in AWS. It sets a timeout that keeps connections alive for in-flight requests before reporting deregistered or unhealthy instances. This allows the load balancer to complete requests made to those instances before taking them out of service. This runbook should be used when you want to avoid disrupting active connections to instances that are being deregistered or going unhealthy behind a CLB. It provides a graceful transition by temporarily maintaining connections. The specified timeout determines the draining period. Refer to the CLB user guide for more details on connection draining.
AWSConfigRemediation-EnableCLBCrossZoneLoadBalancing,"AWSConfigRemediation-EnableCLBCrossZoneLoadBalancing: This runbook enables cross-zone load balancing for a specified Classic Load Balancer (CLB) in AWS. It configures the CLB to distribute incoming application traffic evenly across multiple Availability Zones, providing high availability. This runbook should be used when you need to ensure high availability for applications behind a CLB by spreading load across zones. It modifies the CLB attributes based on AWS best practices. The context specifies it enables cross-zone load balancing for a CLB, so the runbook targets CLBs in an AWS account."
AWSConfigRemediation-EnableELBDeletionProtection,"AWSConfigRemediation-EnableELBDeletionProtection: This runbook enables deletion protection for a specified Elastic Load Balancer (ELB) in AWS. This runbook configures the ELB to prevent accidental or unauthorized deletion. It should be used when you want to protect an ELB from being deleted, which could cause application downtime. The runbook targets Elastic Load Balancing and enables a key security feature. Given the context that it enables deletion protection specifically for an ELB, this runbook is useful for safeguarding load balancers that are critical to application availability."
AWSConfigRemediation-EnableLoggingForALBAndCLB,"AWSConfigRemediation-EnableLoggingForALBAndCLB: This runbook enables logging for a specified Application Load Balancer (ALB) or Classic Load Balancer (CLB) in Amazon Elastic Load Balancing. It performs the action of turning on access logs for the target load balancer. This runbook should be used when you need to enable logging on an ALB or CLB to capture detailed information for troubleshooting or auditing. Based on the provided context, it enables logging as required by AWS Config rules. The generated description is 130 words."
AWSSupport-TroubleshootCLBConnectivity,"AWSSupport-TroubleshootCLBConnectivity: It troubleshoots connectivity issues between Classic Load Balancers (CLBs) and Amazon EC2 instances in AWS. This runbook should be used when connectivity problems arise between a CLB and EC2 instances or between a client and the CLB. It reviews CLB health checks, verifies best practices are followed, and creates a CloudWatch dashboard for troubleshooting. It can optionally upload outputs to a private S3 bucket. Using this runbook incurs charges for the created dashboard per CloudWatch pricing."
AWSConfigRemediation-EnableNLBCrossZoneLoadBalancing,"AWSConfigRemediation-EnableNLBCrossZoneLoadBalancing: It enables cross zone load balancing for a specified network load balancer (NLB) in AWS. This runbook configures the NLB to distribute incoming traffic evenly across multiple Availability Zones. It should be used when you want to increase availability and redundancy for your NLB. By spreading traffic across AZs, the NLB can continue serving traffic even if one AZ becomes unavailable. This runbook specifically targets NLBs, so it is useful if you need cross zone load balancing for TCP/UDP traffic versus HTTP/HTTPS. It can be applied to new or existing NLBs through AWS Systems Manager Automation."
AWS-UpdateALBDesyncMitigationMode,"AWS-UpdateALBDesyncMitigationMode: This runbook updates the desync mitigation mode on an Application Load Balancer (ALB) in AWS. It can set the mitigation mode to either defensive or monitor. Defensive mode blocks requests likely to cause issues, while monitor mode logs risky requests without blocking. This runbook is useful when you want to adjust the security settings on an ALB. It allows toggling the mitigation mode between defensive and monitor. The runbook targets ALBs, so it should be used when desync protection needs to be adjusted on an existing load balancer."
AWS-UpdateCLBDesyncMitigationMode,"AWS-UpdateCLBDesyncMitigationMode: This runbook updates the desync mitigation mode on a Classic Load Balancer (CLB) in AWS to a specified mode. It can set the mitigation mode to defensive, standard, or disable mitigation. This should be used when you need to adjust the security settings on a CLB to defend against different types of threats. Based on the description, it seems this runbook specifically helps handle requests that could pose a security risk by setting the appropriate mitigation mode. This allows adjusting the CLB's protections as needed."
AWSSupport-AnalyzeEMRLogs,"AWSSupport-AnalyzeEMRLogs: This is an Amazon EMR runbook that analyzes logs on an EMR cluster to identify common errors and issues. It searches log files for predefined keywords related to problems like out of memory errors, node health issues, step failures, and HDFS issues. The runbook creates CloudWatch Events based on detected log entries so you can take corrective actions. It also optionally publishes log extracts to CloudWatch Logs. This runbook helps monitor and maintain EMR cluster health. It should be used on active EMR clusters to proactively detect and respond to errors and issues reflected in the logs."
AWSConfigRemediation-DeleteOpenSearchDomain,"AWSConfigRemediation-DeleteOpenSearchDomain: This runbook deletes the given Amazon OpenSearch Service domain using the DeleteDomain API.'): This runbook deletes an Amazon OpenSearch Service domain in your account using the DeleteDomain API call. It should be used when you need to automatically delete an OpenSearch domain that is no longer required based on criteria set in AWS Config rules. By integrating this runbook with AWS Config, you can automatically remediate non-compliant resources by deleting unused OpenSearch domains. This helps reduce costs and manage your OpenSearch domains."
AWSConfigRemediation-EnforceHTTPSOnOpenSearchDomain,AWSConfigRemediation-EnforceHTTPSOnOpenSearchDomain: It enables HTTPS encryption on an Amazon OpenSearch Service domain by calling the UpdateDomainConfig API. This runbook should be used when you want to enforce secure connections over HTTPS to your OpenSearch domain. It can help meet compliance requirements or improve security by encrypting traffic between clients and the OpenSearch cluster. Consider using this runbook after creating a new OpenSearch domain or if you need to enable HTTPS on an existing domain. The runbook targets OpenSearch Service and uses the UpdateDomainConfig API to toggle the EnforceHTTPS setting.
AWSConfigRemediation-UpdateOpenSearchDomainSecurityGroups,"AWSConfigRemediation-UpdateOpenSearchDomainSecurityGroups: This runbook updates the security groups attached to an Amazon OpenSearch Service domain in Amazon VPC. It uses the UpdateDomainConfig API to modify security group settings on a domain based on desired configuration. This runbook should be used when you need to update security groups on an OpenSearch domain to comply with security policies. It can help remediate misconfigured security group rules detected by AWS Config. As specified in the context, it only applies to OpenSearch domains with VPC access, not public access domains."
AWSSupport-TroubleshootOpenSearchRedYellowCluster,"AWSSupport-TroubleshootOpenSearchRedYellowCluster: This is an automation runbook that diagnoses and resolves issues causing red or yellow cluster health status in Amazon OpenSearch Service. 
It uses a temporary AWS Lambda function to call OpenSearch Service APIs and analyze cluster metrics from Amazon CloudWatch to identify the root cause. The runbook gets the domain configuration, checks if it is internet or VPC based, creates a Lambda function accordingly, runs diagnostics, deletes the Lambda function, and provides recommended steps to resolve the issue. 

This runbook is useful when an OpenSearch Service cluster turns red or yellow and you need to troubleshoot why and how to fix it. It automates analysis of cluster settings and metrics data to quickly diagnose and guide resolution."
AWS-AddOpsItemDedupStringToEventBridgeRule,AWS-AddOpsItemDedupStringToEventBridgeRule: This runbook adds a deduplication string to Amazon EventBridge rules that generate AWS Systems Manager OpsItems. The deduplication string helps reduce duplicate OpsItems. The runbook checks if a deduplication string already exists before adding a new one. This prevents duplicate deduplication strings. Use this runbook when you need to reduce duplicate OpsItems generated from EventBridge rules. It integrates EventBridge and Systems Manager to optimize OpsItem management.
AWS-DisableEventBridgeRule,"AWS-DisableEventBridgeRule: It disables Amazon EventBridge rules in AWS. This runbook should be used when you need to temporarily stop an EventBridge rule from triggering actions based on events. The runbook targets the EventBridge service and disables the specific rule you specify. It can help automate disabling rules without needing to use the console. Consider using this runbook when you want to pause event processing for a rule, such as for maintenance or troubleshooting. The runbook description mentions it disables the specified EventBridge rule, so it is useful for automating that task."
AWSConfigRemediation-CreateGuardDutyDetector,"AWSConfigRemediation-CreateGuardDutyDetector: It creates an Amazon GuardDuty detector in the AWS Region where you run the automation. This runbook automates the process of enabling GuardDuty, which is an intelligent threat detection service that continuously monitors for malicious or unauthorized behavior in your AWS environment. The runbook should be used when you want to easily set up and configure GuardDuty across accounts and regions. It can help ensure you have threat detection capabilities enabled. The runbook specifically creates a GuardDuty detector, which is required before GuardDuty can begin monitoring and analyzing account activity for signs of compromise. Given the context that this is an AWSConfigRemediation runbook, it is likely intended for remediating configurations flagged by AWS Config rules."
AWS-AttachIAMToInstance,"AWS-AttachIAMToInstance: This runbook attaches an AWS Identity and Access Management (IAM) role to an EC2 instance. It grants permissions to the EC2 instance by assigning an IAM role. This allows the instance to access other AWS services and resources. The runbook should be used when you need to provide an EC2 instance access to AWS resources like S3 buckets, DynamoDB tables etc. By using IAM roles instead of storing credentials on the instance, you can follow security best practices. The runbook uses AWS Systems Manager Automation to attach the IAM role automatically to newly launched or existing instances."
AWSConfigRemediation-DeleteIAMRole,"AWSConfigRemediation-DeleteIAMRole: This runbook deletes the specified AWS Identity and Access Management (IAM) role. It does not delete any associated instance profiles or service-linked roles. This runbook can be used when you need to remove unused or unneeded IAM roles to improve security and reduce resource usage. Based on the description, it seems this runbook specifically targets IAM role deletion, without impacting other IAM resources like instance profiles. Use cases could include cleaning up after testing, removing temporary access, or revoking permissions from a role no longer needed. Overall, this automates IAM role deletion to simplify security and resource management."
AWSConfigRemediation-DeleteIAMUser,"AWSConfigRemediation-DeleteIAMUser: This runbook deletes the specified IAM user in AWS. It removes access keys, managed policies, group memberships, passwords, MFA devices, signing certificates, SSH keys and other resources associated with that user. This should be used when you need to completely remove an IAM user from your AWS account, such as when an employee leaves the company. Specifying the user to delete allows cleanly removing their access without impacting other users. This automation simplifies fully detaching and deleting a user compared to manually finding and removing all their credentials."
AWSConfigRemediation-DeleteUnusedIAMGroup,"AWSConfigRemediation-DeleteUnusedIAMGroup: It deletes unused IAM groups in AWS IAM. This runbook should be used when you want to clean up unused IAM groups that do not contain any users. Based on the context, this runbook specifically targets IAM groups that are not associated with any IAM users. By running this, you can remove unused IAM groups to simplify your permissions structure. This helps minimize your attack surface and follows security best practices of having the principle of least privilege. Overall, this runbook automates the deletion of unused IAM groups to optimize your IAM permissions."
AWSConfigRemediation-DeleteUnusedIAMPolicy,"AWSConfigRemediation-DeleteUnusedIAMPolicy: It deletes unused AWS Identity and Access Management (IAM) policies in your AWS account. This runbook should be used when you want to clean up unused IAM policies to reduce clutter and unused permissions. Based on the context, this runbook specifically targets IAM policies not attached to any IAM users, groups, or roles. Using this can help adhere to the principle of least privilege by removing unnecessary permissions. This automation runbook helps maintain compliance by deleting extraneous IAM policies no longer needed in your AWS environment."
AWSConfigRemediation-DetachIAMPolicy,"AWSConfigRemediation-DetachIAMPolicy: It detaches a specified AWS Identity and Access Management (IAM) policy from IAM users, groups, or roles in your AWS account. This runbook automates detaching policies to remediate noncompliant resources identified by AWS Config rules. It should be used when you need to quickly detach a policy from multiple IAM entities to meet compliance requirements or reduce access. Consider using this runbook after an AWS Config rule identifies the policy attachment as noncompliant, such as if the policy grants more permissions than necessary based on the principle of least privilege. The runbook targets IAM resources in your AWS account to detach the specified policy."
AWSConfigRemediation-EnableAccountAccessAnalyzer,"AWSConfigRemediation-EnableAccountAccessAnalyzer: This runbook enables AWS IAM Access Analyzer in your AWS account. Access Analyzer evaluates permissions granted through IAM policies to help identify unintended access. This runbook automates creating an Access Analyzer, which continuously monitors for new policies, permissions changes, and access patterns. Use this runbook when initially setting up Access Analyzer for your account. It enables a key security tool to detect identity and access risks."
AWSSupport-GrantPermissionsToIAMUser,"AWSSupport-GrantPermissionsToIAMUser: This runbook grants specified permissions to an existing IAM group or creates a new IAM group, and adds an existing IAM user to it. It allows choosing Billing or Support policies to grant access. To enable billing access, remember to also activate IAM user and federated user access to Billing and Cost Management. Use this runbook to easily grant common IAM permissions to users by adding them to preconfigured groups, instead of applying policies directly to each user. It automates access control best practices like least privilege. Specify an existing group to add users to standardized permission sets. Or create new groups to grant new types of access."
AWSConfigRemediation-RemoveUserPolicies,"AWSConfigRemediation-RemoveUserPolicies: This runbook removes IAM inline policies and detaches managed policies from a specified IAM user in AWS. This runbook can be used when you need to revoke a user's permissions by deleting their inline policies and detaching any managed policies attached to their IAM user. It targets the IAM service in AWS to modify policy attachments for a user. This is useful when managing access controls and complying with the principle of least privilege, by removing unnecessary permissions from a user. The runbook description mentions it operates on IAM users, inline policies and managed policy attachments."
AWSConfigRemediation-ReplaceIAMInlinePolicy,"AWSConfigRemediation-ReplaceIAMInlinePolicy: This runbook replaces inline IAM policies attached to IAM users, groups, or roles with equivalent managed policies. It clones the inline policy permissions into a new managed policy, attaches the managed policy to the IAM resource, and removes the inline policy. This automates remediation of noncompliant resources flagged by AWS Config rules related to use of inline policies. It should be used to improve security and manageability by consolidating permissions into managed policies. Consider running this if AWS Config identifies resources violating best practices around inline IAM policies. The automation simplifies remediation while preserving existing permissions."
AWSConfigRemediation-RevokeUnusedIAMUserCredentials,"AWSConfigRemediation-RevokeUnusedIAMUserCredentials: This runbook revokes unused IAM user credentials like passwords, access keys, and login profiles in AWS. It scans for unused passwords, expired keys, and profiles across all IAM users in an account. Any unused credentials are revoked and deleted to improve security. This runbook should be used periodically to clean up stale credentials and minimize the attack surface. It integrates with AWS Config, so AWS Config must be enabled in the target account. Overall, this automates the process of removing unused credentials to enforce least privilege access in AWS environments."
AWSConfigRemediation-SetIAMPasswordPolicy,"AWSConfigRemediation-SetIAMPasswordPolicy: It configures the password policy settings for IAM users in an AWS account. This runbook sets parameters like minimum password length, requiring symbols, enabling password expiration etc as per best practices. It should be used when an organization wants to enforce strong password policies for enhanced account security. The runbook specifically targets IAM user password policies in AWS, so it is most relevant for configuring password rules in that service. As per the context, it acts within IAM to set the password policy based on AWS best practices."
AWS-EnableKinesisStreamEncryption,"AWS-EnableKinesisStreamEncryption: This runbook enables encryption on an Amazon Kinesis Data Stream using an AWS KMS key. It allows you to easily turn on encryption for a Kinesis data stream. Encrypting the stream provides increased data security by encrypting the data at rest. This runbook should be used when you want to start encrypting an existing Kinesis stream to protect sensitive data. It requires access to the KMS key used for encryption, so appropriate IAM permissions need to be in place. This automation handles enabling encryption on the stream so data producers don't need to be updated immediately."
AWSConfigRemediation-CancelKeyDeletion,"AWSConfigRemediation-CancelKeyDeletion: It cancels the deletion of an AWS Key Management Service (AWS KMS) customer managed key in AWS. This runbook should be used when you need to prevent a KMS key from being deleted, such as if the key was scheduled for accidental deletion. The runbook allows you to cancel the deletion, preserving access to data encrypted under the key. It can help avoid data loss from unwanted key deletion. This automation leverages AWS Systems Manager Automation to cancel the deletion of a specified KMS key, as indicated by the provided context. The runbook interacts with AWS KMS to cancel the pending deletion, restoring normal access to the protected key."
AWSConfigRemediation-EnableKeyRotation,"AWSConfigRemediation-EnableKeyRotation: It enables automatic key rotation for customer managed keys in AWS Key Management Service (AWS KMS). This runbook should be used when you want to automatically rotate KMS keys based on the configured rotation schedule. The runbook targets AWS KMS to configure key rotation on specified keys. It can help meet compliance requirements and improve security by regularly rotating encryption keys. Based on the provided context, this runbook specifically enables automatic rotation for symmetric customer managed KMS keys."
AWSConfigRemediation-ConfigureLambdaFunctionXRayTracing,"AWSConfigRemediation-ConfigureLambdaFunctionXRayTracing: This runbook enables AWS X-Ray live tracing on a specified AWS Lambda function. It configures the Lambda function to send trace data to X-Ray for debugging and monitoring. This runbook should be used when you want to enable tracing on a Lambda function to gain visibility into function executions and performance. Based on the context, it takes a FunctionName parameter to specify the target Lambda function. Tracing Lambda functions with X-Ray can help identify issues and optimize performance."
AWSConfigRemediation-DeleteLambdaFunction,"AWSConfigRemediation-DeleteLambdaFunction: It deletes the specified AWS Lambda function in AWS. This runbook should be used when you need to remove an unused or outdated Lambda function from your account. Consider using this runbook when cleaning up resources, migrating functions between accounts, or consolidating Lambda functions. The runbook targets AWS Lambda and can help automate the deletion process. Specify the Lambda function to delete in the runbook parameters. This runbook provides an automated way to delete Lambda functions through AWS SSM Automation."
AWSConfigRemediation-EncryptLambdaEnvironmentVariablesWithCMK,AWSConfigRemediation-EncryptLambdaEnvironmentVariablesWithCMK: This runbook encrypts the environment variables for a specified AWS Lambda function using a customer managed key from AWS Key Management Service (AWS KMS). It helps secure sensitive data at rest by encrypting Lambda function environment variables according to security best practices. This runbook should be used to establish a baseline level of security for Lambda functions by encrypting their environment variables with unique customer managed keys. It can help prevent unauthorized access to sensitive data stored in Lambda function environment variables.
AWSConfigRemediation-MoveLambdaToVPC,"AWSConfigRemediation-MoveLambdaToVPC: This runbook moves an AWS Lambda(Lambda) function to an Amazon Virtual Private Cloud (Amazon VPC).'): This runbook moves a Lambda function into a VPC. It should be used when you need to connect a Lambda to private resources in a VPC like databases. The runbook modifies the Lambda configuration and networking settings to place it within the target VPC, enabling secure access to private resources. It automates the process of migrating Lambdas to VPCs for access control and security."
AWSSupport-RemediateLambdaS3Event,AWSSupport-RemediateLambdaS3Event: This runbook automates troubleshooting and remediation when an Amazon S3 event notification fails to trigger the specified AWS Lambda function. It helps identify misconfigurations in the Lambda function that prevent triggering by S3 events. This runbook should be used when S3 events are not invoking the expected Lambda function. It checks Lambda function settings like concurrency limits and scaling configurations. The runbook outputs suggestions to validate and adjust the Lambda function to receive S3 event notifications as expected.
AWSSupport-TroubleshootLambdaInternetAccess,"AWSSupport-TroubleshootLambdaInternetAccess: This runbook troubleshoots internet access issues for AWS Lambda functions launched into Amazon Virtual Private Cloud (VPC). It reviews subnet routes, security group rules, and network access control list (ACL) rules to confirm outbound internet access is allowed for the Lambda function. Use this runbook when a Lambda function in a VPC cannot access the internet, to validate proper network configuration. It analyzes networking resources like subnets, routes, security groups and ACLs to identify misconfigurations blocking internet access."
AWSSupport-TroubleshootLambdaS3Event,"AWSSupport-TroubleshootLambdaS3Event: This runbook automates troubleshooting when an Amazon S3 event notification fails to trigger an AWS Lambda function. It helps identify issues like invalid Lambda function configurations, IAM permissions, S3 bucket configurations etc. that can prevent the event trigger from working. This runbook should be used when an expected S3 event is not invoking the target Lambda function. It can diagnose common misconfigurations and provide remediation guidance. The runbook implements best practices from AWS Knowledge Center to automate resolution for S3 event trigger issues."
AWS-CreateRdsSnapshot,"AWS-CreateRdsSnapshot: It creates a snapshot of an Amazon Relational Database Service (Amazon RDS) instance. This runbook automates taking a snapshot of an RDS database instance, which can be used for backups or cloning the database. It should be used when you need to backup or clone an RDS database. The runbook targets Amazon RDS and can be used to automate database backups. As specified in the context, it focuses on creating RDS snapshots, which are point-in-time backups of RDS instances. Using this runbook allows automating the process of creating snapshots instead of manually creating them. It provides a way to easily backup critical database information."
AWSConfigRemediation-DeleteRDSCluster,"AWSConfigRemediation-DeleteRDSCluster: It deletes the specified Amazon Relational Database Service (Amazon RDS) cluster in your AWS account. This runbook should be used when you want to remove an RDS cluster that is no longer needed. The runbook uses AWS Config, so AWS Config must be enabled in the region where you run the automation. This runbook targets RDS clusters specifically, so it is useful when you need to delete an RDS cluster without impacting other resources. Consider using this runbook when cleaning up unused or outdated RDS clusters to reduce costs or consolidate databases."
AWSConfigRemediation-DeleteRDSClusterSnapshot,AWSConfigRemediation-DeleteRDSClusterSnapshot: It deletes the given Amazon Relational Database Service (Amazon RDS) cluster snapshot in Amazon RDS. This runbook should be used when you want to remove an RDS cluster snapshot that is no longer needed. The runbook targets Amazon RDS to delete a specific cluster snapshot based on the snapshot identifier provided. Consider using this runbook when cleaning up unused RDS cluster snapshots to reduce storage costs or when a snapshot is no longer required.
AWSConfigRemediation-DeleteRDSInstance,"AWSConfigRemediation-DeleteRDSInstance: This runbook deletes the specified Amazon Relational Database Service (Amazon RDS) instance in your AWS account. It should be used when you need to permanently remove an RDS instance that is no longer required. The runbook will delete all automated backups associated with the RDS instance, but will not delete manual DB snapshots. Special handling is required if the RDS instance is in a failed, incompatible-network, or incompatible-restore state. Additional logic applies if the RDS instance is part of an Amazon Aurora DB cluster."
AWSConfigRemediation-DeleteRDSInstanceSnapshot,"AWSConfigRemediation-DeleteRDSInstanceSnapshot: This runbook deletes an Amazon RDS database instance snapshot in the available state. It can be used to clean up unused RDS snapshots to save on storage costs. The runbook targets the Amazon RDS service and does not support deleting Aurora DB snapshots. Based on the description, it takes a snapshot ID as input and removes that specific snapshot. This would be useful when an RDS snapshot is no longer needed for backup/restore purposes and you want to delete it through automation instead of manually."
AWSConfigRemediation-DisablePublicAccessToRDSInstance,"AWSConfigRemediation-DisablePublicAccessToRDSInstance: It disables public accessibility for Amazon Relational Database Service (Amazon RDS) database instances. This runbook should be used when you want to restrict access to RDS instances only within your VPC or private network. By disabling public access, the runbook enhances security by preventing external traffic from reaching the database. Based on the context, it acts on a specified RDS instance to remove public accessibility. This is useful when an RDS instance was unintentionally left public and you want to quickly remediate this misconfiguration. Run this runbook to comply with security best practices of restricting database access to only private connections within your VPC."
AWSConfigRemediation-EnableCopyTagsToSnapshotOnRDSCluster,"AWSConfigRemediation-EnableCopyTagsToSnapshotOnRDSCluster: This runbook enables copying tags from an Amazon RDS cluster to snapshots of that cluster. It modifies the CopyTagsToSnapshot setting on the specified RDS cluster to enabled. By default, tags are not copied to DB cluster snapshots. This runbook automates enabling this capability, which can help track costs and manage permissions for DB cluster snapshots. It should be used when you want to retain tag metadata on RDS cluster snapshots. The runbook targets Amazon RDS and requires AWS Config be enabled in the target region."
AWSConfigRemediation-EnableCopyTagsToSnapshotOnRDSDBInstance,"AWSConfigRemediation-EnableCopyTagsToSnapshotOnRDSDBInstance: This runbook enables copying tags from an Amazon RDS database instance to snapshots of that instance. It modifies the CopyTagsToSnapshot setting on the specified RDS instance to enabled. By default, tags are not copied. This automation should be used when you want to retain tagging information on RDS snapshots for purposes like cost allocation or automation. It requires AWS Config be enabled in the target region. The runbook allows copying tags to snapshots, preserving important metadata."
AWSConfigRemediation-EnableEnhancedMonitoringOnRDSInstance,"AWSConfigRemediation-EnableEnhancedMonitoringOnRDSInstance: This runbook enables Enhanced Monitoring on Amazon RDS database instances in your AWS account. It performs the action of turning on detailed monitoring metrics for RDS instances. This runbook should be used when you want to monitor OS metrics such as CPU utilization, memory consumption, file system usage, and disk I/O from your RDS instances. It enables deeper visibility into database performance and resource utilization. The runbook targets RDS database instances and allows enabling detailed monitoring as per AWS best practices."
AWSConfigRemediation-EnableMinorVersionUpgradeOnRDS,"AWSConfigRemediation-EnableMinorVersionUpgradeOnRDS: This runbook enables automatic minor version upgrades for Amazon RDS database instances. It sets the AutoMinorVersionUpgrade parameter to true on the specified RDS instance, allowing minor version patches and upgrades to be applied during the maintenance window. This automates the process of keeping the database up-to-date and can reduce administrative overhead. This runbook would be useful when you want to keep your RDS instances up-to-date automatically without needing to manually apply minor version upgrades. It provides a way to easily enable this capability across many RDS instances. The runbook targets Amazon RDS, allowing minor version upgrades to be enabled directly on the database service."
AWSConfigRemediation-EnableMultiAZOnRDSInstance,AWSConfigRemediation-EnableMultiAZOnRDSInstance: This runbook enables Multi-AZ deployment for an Amazon RDS database instance. It modifies the RDS instance to create a standby replica in another Availability Zone. This provides high availability and automatic failover support in case the primary AZ becomes unavailable. The runbook can be used to add disaster recovery capability to critical database workloads. It allows RDS to automatically failover to the standby replica if there is an Availability Zone outage or database failure. The failover process is transparent and does not require manual intervention. This runbook is useful for enhancing reliability of production database instances.
AWSConfigRemediation-EnablePerformanceInsightsOnRDSInstance,"AWSConfigRemediation-EnablePerformanceInsightsOnRDSInstance: It enables Performance Insights on Amazon RDS DB instances. This runbook automates the process of enabling Performance Insights for monitoring and analyzing database load and query performance data on RDS instances. It should be used when you need to start collecting Performance Insights metrics for an RDS instance, without having to manually enable the feature. The runbook targets Amazon RDS service and takes the DB instance identifier as input to enable Performance Insights on that specific instance. It can help ensure RDS instances are configured according to best practices."
AWSConfigRemediation-EnableRDSClusterDeletionProtection,"AWSConfigRemediation-EnableRDSClusterDeletionProtection: This runbook enables deletion protection on Amazon RDS clusters. It configures the specified RDS cluster to prevent accidental or unauthorized deletion. This runbook should be used when you want to protect an RDS cluster from being deleted, either intentionally or unintentionally. It requires AWS Config to be enabled in the region where it runs. The runbook targets RDS clusters specifically, making it useful for safeguarding database infrastructure. By enabling deletion protection, the runbook prevents disruption to applications relying on the database."
AWSConfigRemediation-EnableRDSInstanceBackup,"AWSConfigRemediation-EnableRDSInstanceBackup: It enables automated backups for Amazon RDS database instances. This runbook automates the process of enabling backups for RDS instances that were created without backups enabled. It should be used when you need to quickly remediate RDS instances that are non-compliant with backup policies. This runbook targets Amazon RDS database instances specifically, excluding Amazon Aurora DB instances. It helps maintain backup compliance and data protection for critical RDS databases."
AWSConfigRemediation-EnableRDSInstanceDeletionProtection,"AWSConfigRemediation-EnableRDSInstanceDeletionProtection: It enables deletion protection on Amazon RDS database instances. This runbook configures RDS instances to prevent accidental or malicious deletion. It should be used when you want to protect production database instances from being deleted without explicit approval. The runbook targets Amazon RDS and enables a key security feature to prevent data loss. As specified in the context, it enables deletion protection specifically on the RDS instance you specify, adding a layer of protection. This runbook is useful for safeguarding business critical databases."
AWSConfigRemediation-ModifyRDSInstancePortNumber,"AWSConfigRemediation-ModifyRDSInstancePortNumber: This runbook modifies the port number on which an Amazon RDS database instance accepts connections. Running this automation will restart the database instance to apply the new port number. This runbook should be used when you need to change the port for an RDS instance, for example to improve security or avoid port conflicts. The runbook targets Amazon RDS and can modify RDS instance port numbers. It should be used with care as changing the port will disrupt existing database connections. Consider the instance type and downtime requirements before executing."
AWSSupport-ModifyRDSSnapshotPermission,"AWSSupport-ModifyRDSSnapshotPermission: This runbook modifies permissions for Amazon RDS snapshots in AWS. It can make snapshots public or private, and share them across AWS accounts. The runbook enables granting or revoking access to RDS snapshots that are encrypted with default KMS keys. Use this runbook when you need to change permissions on multiple RDS snapshots at once, such as making them public for sharing or private for access control. It provides an automated way to manage permissions for RDS snapshots in AWS."
AWSPremiumSupport-PostgreSQLWorkloadReview,"AWSPremiumSupport-PostgreSQLWorkloadReview: This runbook captures usage statistics from an Amazon RDS PostgreSQL database to enable an AWS Support expert to perform an operational review. 
This runbook creates temporary AWS resources like an EC2 instance, VPC, IAM roles etc. in the user's account using CloudFormation. It runs custom SQL and shell scripts on the EC2 instance to collect PostgreSQL database statistics by querying views and functions. The collected statistics are uploaded to an S3 bucket specified by the user. 

This runbook would be useful when a user wants an AWS Support expert to review the performance and operations of their PostgreSQL database to identify optimization opportunities. The required PostgreSQL statistics are gathered safely and securely without direct access to the database. The user must have an Enterprise Support subscription and appropriate database permissions configured."
AWS-RebootRdsInstance,"AWS-RebootRdsInstance: It reboots an Amazon Relational Database Service (Amazon RDS) database instance if it is not already rebooting. This runbook automates rebooting RDS instances, which can help restore availability and connectivity if an instance is unresponsive. It should be used when an RDS instance needs to be rebooted but you want to avoid doing so manually. The runbook checks the status of the RDS instance and reboots it only if needed, avoiding unnecessary reboots. It provides an automated way to reboot RDS instances while following best practices."
AWSSupport-ShareRDSSnapshot,"AWSSupport-ShareRDSSnapshot: It copies an encrypted Amazon RDS snapshot using a customer managed KMS key and shares it with another AWS account. This runbook automates the process outlined in the Knowledge Center for sharing encrypted RDS snapshots across accounts, which requires re-encrypting the snapshot with a customer KMS key. It should be used when you need to share an RDS snapshot encrypted with the default AWS KMS key to another account. The runbook accepts the snapshot name or RDS instance/cluster as input, creates a customer KMS key if one is not provided, copies the snapshot with the new key, and shares the copied snapshot with the target account."
AWS-StartRdsInstance,"AWS-StartRdsInstance: It starts an Amazon Relational Database Service (Amazon RDS) instance. This runbook automates starting RDS database instances, which is useful when you need to quickly spin up a database server. It should be used when you need to bring an RDS instance online that was previously stopped or is newly created. The runbook handles starting the RDS instance and waits for it to become available before completing. It can be used to start production or development databases as needed. The automation simplifies and speeds up the process of starting RDS instances compared to doing it manually through the console or API."
AWS-StopRdsInstance,AWS-StopRdsInstance: It stops an Amazon Relational Database Service (Amazon RDS) instance. This runbook should be used when you want to stop an RDS instance to save costs or before making configuration changes. It can stop RDS instances across multiple AWS regions and accounts. Consider using this runbook when you need to quickly stop RDS instances without manually going into the AWS console. The runbook allows stopping RDS instances across accounts and regions in an automated fashion.
AWSSupport-TroubleshootConnectivityToRDS,"AWSSupport-TroubleshootConnectivityToRDS: This runbook diagnoses connectivity issues between an Amazon EC2 instance and an Amazon RDS database instance. It checks if the RDS instance is available, verifies the associated security group rules, network ACLs, and route tables to identify potential connectivity problems. This automation can be used when connecting an EC2 instance to an RDS database is failing. It automates troubleshooting common connectivity issues like security group misconfigurations, restrictive network ACLs, and incorrect route table routes. By automating these checks, this runbook simplifies diagnosing and resolving connectivity problems between EC2 and RDS."
AWSSupport-TroubleshootRDSIAMAuthentication,"AWSSupport-TroubleshootRDSIAMAuthentication: It troubleshoots and verifies the configuration required for IAM authentication with Amazon RDS and Amazon Aurora database instances. This runbook should be used when encountering issues connecting to RDS or Aurora using IAM authentication. It validates if IAM authentication is enabled, required IAM permissions are present, and connectivity from the source EC2 instance if provided. The runbook provides remediation steps and sample database connection commands using IAM authentication. This is useful for debugging IAM database authentication issues with RDS and Aurora PostgreSQL, MySQL, MariaDB database engines."
AWSSupport-ValidateRdsNetworkConfiguration,"AWSSupport-ValidateRdsNetworkConfiguration: This runbook validates the network configuration for an Amazon RDS database instance before performing a ModifyDBInstance or StartDBInstance operation. It checks for conditions that could cause the instance to enter an incompatible network state, such as insufficient IP addresses or incorrect VPC settings. This runbook should be used when modifying or starting an RDS instance to avoid network-related errors. It verifies subnet and ENI quotas, subnet IP availability, and VPC attributes based on the provided RDS instance identifier. Using this runbook helps prevent incompatible network states by proactively detecting potential issues."
AWSConfigRemediation-DeleteRedshiftCluster,"AWSConfigRemediation-DeleteRedshiftCluster: It deletes the specified Amazon Redshift cluster in Amazon Redshift. This runbook should be used when you need to remove an unused or outdated Redshift cluster. The runbook targets Amazon Redshift to remove the specified cluster, allowing you to deprovision unneeded resources. Consider using this runbook when restructuring your data warehouse architecture or consolidating clusters. Specify the cluster identifier to target the correct Redshift cluster for deletion."
AWSConfigRemediation-DisablePublicAccessToRedshiftCluster,"AWSConfigRemediation-DisablePublicAccessToRedshiftCluster: It disables public accessibility for Amazon Redshift clusters. This runbook modifies the publiclyAccessible parameter to false for the specified Redshift cluster, preventing direct connections from public IP addresses. This runbook should be used when you want to restrict access to your Redshift cluster only from within your VPC or specific IP ranges, enhancing security. Consider using this runbook if your Redshift cluster was created with public accessibility enabled by default, but you want to limit access. The runbook targets Redshift clusters specifically, disabling public access as recommended by AWS security best practices."
AWSConfigRemediation-EnableRedshiftClusterAuditLogging,"AWSConfigRemediation-EnableRedshiftClusterAuditLogging: It enables audit logging for Amazon Redshift clusters. This runbook configures the specified Redshift cluster to send audit log records to Amazon CloudWatch Logs. It should be used when you want to monitor user activity and API calls for a Redshift cluster. This provides visibility into database access and changes, which can be useful for security and compliance purposes. The runbook targets a specific Redshift cluster that you specify, enabling audit logging by modifying the cluster parameter group settings. It can help meet audit logging requirements without needing to manually configure each cluster."
AWSConfigRemediation-EnableRedshiftClusterAutomatedSnapshot,AWSConfigRemediation-EnableRedshiftClusterAutomatedSnapshot: It enables automated snapshots for Amazon Redshift clusters. This runbook modifies the automated snapshot retention period and other snapshot settings for a specified Redshift cluster. It should be used when you want to enable automated backups for a Redshift cluster to improve data protection and recovery. Consider using this runbook if your Redshift cluster does not have automated snapshots enabled or you want to modify the automated snapshot settings. It can help meet compliance requirements and provides an easy way to enable this best practice for Redshift clusters.
AWSConfigRemediation-EnableRedshiftClusterEncryption,"AWSConfigRemediation-EnableRedshiftClusterEncryption: This runbook enables encryption on Amazon Redshift clusters using AWS Key Management Service (AWS KMS) customer managed keys. It should be used to encrypt Redshift clusters according to security best practices. The runbook cannot change the KMS key on an already encrypted cluster. To change the KMS key, encryption must first be disabled. This runbook provides a baseline encryption configuration for Redshift clusters. For enhanced security, encrypt multiple clusters with different customer managed keys."
AWSConfigRemediation-EnableRedshiftClusterEnhancedVPCRouting,AWSConfigRemediation-EnableRedshiftClusterEnhancedVPCRouting: This runbook enables enhanced VPC routing for Amazon Redshift clusters in AWS. It can be used to enable the enhanced VPC routing feature for a specified Redshift cluster. Enhanced VPC routing forces all COPY and UNLOAD traffic between the cluster and data repositories to go through your Amazon VPC. This improves security by isolating network traffic between Amazon Redshift and data repositories in VPC. This runbook would be useful when you want to enable enhanced VPC routing on an existing Amazon Redshift cluster to improve network isolation and security. It should be used on clusters that need to access data repositories within your VPC.
AWSConfigRemediation-EnforceSSLOnlyConnectionsToRedshiftCluster,"AWSConfigRemediation-EnforceSSLOnlyConnectionsToRedshiftCluster: It configures Amazon Redshift clusters to enforce SSL-only connections. This runbook modifies cluster parameters to require SSL encryption for all database connections to a Redshift cluster. It should be used when stronger security is needed for sensitive data in a Redshift cluster. By enforcing SSL connections, data transmission is encrypted in transit, preventing snooping or man-in-the-middle attacks. This runbook targets Redshift clusters specifically, modifying cluster parameters based on the description. It enables a security best practice for Redshift by enforcing SSL connections."
AWSConfigRemediation-ModifyRedshiftClusterMaintenanceSettings,"AWSConfigRemediation-ModifyRedshiftClusterMaintenanceSettings: It modifies the maintenance settings for Amazon Redshift clusters. This runbook updates the settings related to when maintenance updates and backups occur for a specified Redshift cluster. It should be used when you need to change the maintenance windows or backup settings for an existing Redshift cluster. Based on the context, this runbook allows configuring when maintenance and backups happen through AWS Config rules. It can help automate compliance with policies around Redshift maintenance. The runbook targets Amazon Redshift and modifies cluster settings."
AWSConfigRemediation-ModifyRedshiftClusterNodeType,AWSConfigRemediation-ModifyRedshiftClusterNodeType: It modifies the node type and number of nodes for Amazon Redshift clusters. This runbook should be used when you need to change the compute and storage capacity of your Redshift cluster by adjusting the node type or number of nodes. It allows automatic remediation of configurations that violate policies related to Redshift cluster sizing. Consider using this runbook when AWS Config detects your Redshift cluster is non-compliant with node type or node count policies. The runbook provides an automated way to remediate those violations by resizing the cluster as needed.
AWS-ArchiveS3BucketToIntelligentTiering,AWS-ArchiveS3BucketToIntelligentTiering: It configures an Amazon S3 bucket to use Intelligent Tiering storage. This runbook creates or replaces an intelligent tiering configuration for the specified S3 bucket. Intelligent Tiering can help reduce storage costs by automatically moving data between access tiers based on usage patterns. This runbook should be used when you want to enable Intelligent Tiering on an existing S3 bucket to optimize storage costs. It is useful for archiving infrequently accessed data while keeping frequently used data in lower cost tiers. The runbook acts on the specified S3 bucket based on the provided description.
AWS-ConfigureS3BucketLogging,AWS-ConfigureS3BucketLogging: It enables server access logging on an Amazon Simple Storage Service (Amazon S3) bucket. This runbook configures an S3 bucket to write access logs to another S3 bucket. It should be used when you want to track requests made to an S3 bucket for security and access monitoring purposes. The runbook targets Amazon S3 and can enable detailed logging for auditing and diagnostic purposes. It is useful for security teams to analyze access patterns and investigate suspicious activity. The provided context indicates it enables logging specifically on S3 buckets.
AWS-ConfigureS3BucketVersioning,"AWS-ConfigureS3BucketVersioning: This runbook configures versioning for an Amazon S3 bucket. It enables or suspends versioning on the specified S3 bucket. This allows you to keep multiple variants of an object in the same bucket. It is useful for backup and restore, as well as maintaining document history. This runbook should be used when you need to enable or suspend versioning on an S3 bucket. It can help implement backup policies and provide protection against unintended overwrites or deletes. The runbook acts on the specified S3 bucket to modify its versioning configuration."
AWSConfigRemediation-ConfigureS3BucketPublicAccessBlock,"AWSConfigRemediation-ConfigureS3BucketPublicAccessBlock: This runbook configures the Amazon S3 public access block settings for a specified S3 bucket. It allows setting access controls to block public access to buckets and objects. This runbook should be used when you want to restrict public access to an S3 bucket per security best practices. Based on the context, it sets S3 bucket public access block configuration based on parameters specified in the runbook. Using this automates setting up S3 access controls for security and compliance."
AWSConfigRemediation-ConfigureS3PublicAccessBlock,"AWSConfigRemediation-ConfigureS3PublicAccessBlock: This runbook configures the Amazon S3 public access block settings for an AWS account based on specified parameter values. It enables managing public access to S3 buckets and objects. This runbook should be used when you want to set account-level S3 public access block configuration like blocking public access to buckets and objects. It allows configuring settings like blocking new public bucket policies, ignoring public ACLs, and requiring authorization to access S3 objects. This runbook acts on the S3 service for the target AWS account."
AWS-CreateS3PolicyToExpireMultipartUploads,"AWS-CreateS3PolicyToExpireMultipartUploads: This runbook creates a lifecycle policy for an Amazon S3 bucket to expire incomplete, multipart uploads after a specified number of days. It merges the new policy with any existing lifecycle policies on the bucket. This can help reduce storage costs by removing unfinished uploads that may never complete. It should be used when you want to automatically delete multipart uploads that have remained incomplete for a defined period. The runbook targets Amazon S3 buckets and expires multipart uploads based on the provided configuration."
AWS-DisableS3BucketPublicReadWrite,"AWS-DisableS3BucketPublicReadWrite: This runbook disables public read and write access for Amazon S3 buckets. It uses Amazon S3 Block Public Access to remove the ability for unauthorized users to view or modify objects in a bucket. This runbook should be used when you want to restrict access to sensitive data in an S3 bucket, or prevent public writing that could incur unexpected costs. Given the context that it utilizes Amazon S3 Block Public Access, this runbook is ideal for quickly locking down bucket permissions. By disabling public access, it enhances security and prevents unwanted public usage of S3 resources."
AWS-EnableS3BucketEncryption,"AWS-EnableS3BucketEncryption: It configures default encryption for an Amazon Simple Storage Service (Amazon S3) bucket. This runbook enables encryption on an existing S3 bucket to protect sensitive data stored in the bucket. It should be used when there is a need to enable encryption on an S3 bucket that was created without encryption enabled. The runbook uses AWS Systems Manager Automation to enable default encryption on the specified S3 bucket. This allows enabling encryption on S3 buckets without needing to manually configure it. Given that the runbook targets Amazon S3, it is useful for enabling encryption on storage buckets."
AWS-EnableS3BucketKeys,"AWS-EnableS3BucketKeys: This runbook enables server-side encryption on an Amazon S3 bucket using AWS KMS keys. It configures bucket keys to encrypt new objects uploaded to the target S3 bucket. The KmsKeyId parameter specifies the KMS key ID to use for encryption. If no KmsKeyId is specified, S3 managed keys (SSE-S3) are used by default. This runbook automates enabling encryption on an S3 bucket to protect sensitive data at rest. It should be used when strong encryption is required for a bucket's contents."
AWSConfigRemediation-RemovePrincipalStarFromS3BucketPolicy,"AWSConfigRemediation-RemovePrincipalStarFromS3BucketPolicy: This runbook removes wildcard principal policy statements from Amazon S3 bucket policies. It scans for Allow actions with Principal set to '*' or 'AWS': '*' and removes those statements, including any with conditions. This should be used when you want to tighten security by eliminating broad access permissions from your S3 buckets. The runbook targets Amazon S3 bucket policies specifically, removing overly permissive statements to restrict access. As noted in the description, it focuses on wildcard principal policies for Allow actions, which can grant unintended access. Running this can help harden S3 bucket policies by removing those risky permissions."
AWSConfigRemediation-RestrictBucketSSLRequestsOnly,"AWSConfigRemediation-RestrictBucketSSLRequestsOnly: It modifies the bucket policy for an Amazon S3 bucket to deny HTTP requests and enforce SSL requests only. This runbook should be used when you want to enforce secure connections to an S3 bucket by blocking unencrypted HTTP requests. Based on the context, it creates a bucket policy statement to explicitly deny HTTP requests to a specified S3 bucket. This can help meet compliance requirements or improve security by requiring SSL for any access to the bucket. As it modifies the bucket policy, this runbook is useful when you need to quickly enforce SSL connections for an existing S3 bucket."
AWSSupport-TroubleshootS3PublicRead,"AWSSupport-TroubleshootS3PublicRead: This runbook diagnoses issues with reading objects from a public Amazon S3 bucket. It analyzes settings for objects in the specified S3 bucket to troubleshoot public access problems. This runbook should be used when you need to diagnose why objects in a public S3 bucket cannot be accessed as expected. It checks bucket policies, ACLs, and object permissions to identify misconfigurations that could prevent public reading of objects. The runbook targets Amazon S3 and focuses on troubleshooting public access issues for a specific S3 bucket."
AWS-DisableSageMakerNotebookRootAccess,"AWS-DisableSageMakerNotebookRootAccess: It disables root access on Amazon SageMaker notebook instances. This runbook stops the notebook instance to make the required changes. It should be used when you want to increase security by removing the ability for users to gain root access on SageMaker notebook instances. This runbook cannot be used on SageMaker Studio notebook instances. By disabling root access, you prevent users from making broad changes to the underlying instance that could impact security or availability. Use this runbook to lock down notebook instances after creation and prevent privilege escalation."
AWSConfigRemediation-DeleteSecret,"AWSConfigRemediation-DeleteSecret: This runbook deletes a secret and all versions stored in AWS Secrets Manager. You can specify a recovery window to restore the deleted secret. If no recovery window is specified, the default is 30 days. This can be used when you need to permanently delete a secret from Secrets Manager, while allowing a window of time to restore it in case of accidental deletion. Specifying a short recovery window ensures secrets are fully removed after a certain time period."
AWSConfigRemediation-RotateSecret,"AWSConfigRemediation-RotateSecret: It rotates secrets stored in AWS Secrets Manager. This runbook automates the process of rotating secrets to help meet security and compliance requirements. It should be used when secrets in Secrets Manager need to be rotated on a regular schedule to reduce the risk of compromised credentials. The runbook handles validating that rotation can proceed, creating new secret versions, updating applications to use the new secret, and cleaning up old secret versions. This automation simplifies secret rotation, avoiding the need to manually rotate secrets across multiple services. Key points from the context are that it targets Secrets Manager specifically and implements rotation to enhance security."
AWSConfigRemediation-EnableSecurityHub,"AWSConfigRemediation-EnableSecurityHub: It enables AWS Security Hub in the target AWS account and region. This runbook automates the process of enabling Security Hub, which provides a comprehensive view of security alerts and compliance status across an AWS environment. It should be used when you want to quickly enable Security Hub across accounts and regions, rather than manually enabling it. The runbook targets Security Hub specifically, as mentioned in the context. It allows enabling this important security service across an AWS estate through automation. The description states it enables Security Hub for the account and region where it is run."
AWSPremiumSupport-DDoSResiliencyAssessment,"AWSPremiumSupport-DDoSResiliencyAssessment: This runbook helps assess DDoS vulnerabilities and configuration of resources for AWS Shield Advanced protection in an AWS account. It checks Amazon Route 53, Elastic Load Balancers, CloudFront distributions, AWS Global Accelerator and Elastic IPs for configuration settings as per AWS DDoS best practices. It generates an HTML report with findings stored in an S3 bucket. This runbook is used to evaluate DDoS protections for resources enabled for public access in an AWS account with Shield Advanced. It should be run periodically to identify any gaps in DDoS protections."
AWSConfigRemediation-EncryptSNSTopic,"AWSConfigRemediation-EncryptSNSTopic: It enables encryption on Amazon Simple Notification Service (SNS) topics using AWS Key Management Service (KMS) customer managed keys. This runbook should be used to encrypt SNS topics according to security best practices. It can help ensure SNS topic data is encrypted at rest with KMS keys you manage and control access to. Based on the context, this runbook enables encryption on a specific SNS topic using a customer managed KMS key to align with recommended security practices for encrypting sensitive data. The runbook automates applying encryption to meet compliance and security requirements."
AWS-PublishSNSNotification,"AWS-PublishSNSNotification: This runbook publishes a notification message to an Amazon SNS topic. It can be used to send alerts, notifications or other messages to subscribers of the SNS topic. The runbook allows specifying the message content, subject and SNS topic ARN to publish to. It provides an automated way to publish messages to SNS without having to write custom code. This is useful for sending notifications from other AWS services or custom applications. The runbook simplifies publishing SNS notifications through automation."
AWS-EnableSQSEncryption,AWS-EnableSQSEncryption: This runbook enables encryption at rest for Amazon Simple Queue Service (Amazon SQS) queues using either Amazon SQS managed keys (SSE-SQS) or AWS Key Management Service (AWS KMS) managed keys (SSE-KMS). It allows you to encrypt your SQS queues to protect data at rest. This runbook should be used when you need to enable encryption for an existing SQS queue to meet compliance requirements or improve security posture. Key considerations when using this runbook are ensuring the encryption keys have appropriate key policies for authorized principals and configuring your applications to use encrypted queues.
AWS-EnableStepFunctionsStateMachineLogging,"AWS-EnableStepFunctionsStateMachineLogging: It enables or updates logging on the specified AWS Step Functions state machine. This runbook configures the minimum logging level to ALL, ERROR, or FATAL. It should be used when you need to troubleshoot issues or monitor execution of a Step Functions workflow. The runbook targets AWS Step Functions to modify logging configuration. It is useful when debugging complex workflows or analyzing execution patterns. By enabling detailed logging, you can gain visibility into each state transition and pinpoint failures or performance bottlenecks. The runbook provides an automated way to enable logging without needing to manually modify state machine settings."
AWS-BulkDeleteAssociation,"AWS-BulkDeleteAssociation: This runbook deletes Systems Manager State Manager associations in bulk. It can delete up to 50 associations at a time in the target AWS account. This runbook is useful when you need to remove a large number of associations quickly, such as if you are cleaning up resources after a project or want to remove outdated associations. The runbook targets the Systems Manager service, specifically the State Manager capability. It should be used when you need to delete multiple associations simultaneously rather than individually. Consider the number of associations and AWS account before running this automation."
AWS-BulkEditOpsItems,"AWS-BulkEditOpsItems: This runbook edits the status, severity, category, or priority of AWS Systems Manager OpsItems in bulk. It can update up to 50 OpsItems at a time. This automation is useful when you need to make batch changes to OpsItems attributes like changing a group of OpsItems to closed status after resolving the underlying issues. Use this runbook when you have multiple OpsItems that need updates to their metadata fields like status or severity, and you want to make those changes efficiently in bulk."
AWS-BulkResolveOpsItems,"AWS-BulkResolveOpsItems: This runbook resolves OpsItems in bulk based on specified filters. This runbook can be used to efficiently resolve a large number of OpsItems that match certain criteria, such as OpsItems of a certain type or from a certain source. The runbook allows optionally specifying an OpsItem ID to resolve, sending results to an S3 bucket, and notifying an SNS topic when complete. It is useful when you need to administratively resolve many OpsItems at once, such as to clean up old alerts or events."
AWS-ConfigureMaintenanceWindows,"AWS-ConfigureMaintenanceWindows: This runbook configures Systems Manager Maintenance Windows in AWS. It enables or disables multiple Maintenance Windows, which are scheduled periods for running administrative and maintenance tasks on your EC2 instances. This runbook should be used when you need to quickly modify the status of multiple Maintenance Windows at once, rather than editing them individually in the console. It can help automate maintenance tasks across large fleets of instances. The runbook targets the Systems Manager service and modifies Maintenance Window settings."
AWS-CreateManagedLinuxInstance,"AWS-CreateManagedLinuxInstance: This runbook creates an EC2 instance running Linux that is configured for AWS Systems Manager. It launches an EC2 instance, installs the SSM agent, and associates the instance with a Systems Manager document to configure it. This runbook automates the process of deploying a managed Linux instance that can be used with Systems Manager capabilities like Run Command, State Manager, Patch Manager, and Session Manager. It eliminates the need to manually install, configure and register the SSM agent on new EC2 instances. This runbook is useful when you need to quickly spin up Linux instances that are ready to use with Systems Manager right away."
AWS-CreateManagedWindowsInstance,"AWS-CreateManagedWindowsInstance: This runbook creates an EC2 instance running Windows Server that is configured for AWS Systems Manager. It launches a new EC2 instance, installs SSM agent, joins the instance to a domain, and applies specified SSM documents. This automates the process of deploying a Windows server that is managed by Systems Manager. It should be used when you need to quickly spin up a Windows server that is integrated with Systems Manager for patch management, configuration compliance, operational insights, and automation workflows. The runbook handles instance creation and configuration, simplifying Windows server deployment."
AWSConfigRemediation-EnableCWLoggingForSessionManager,"AWSConfigRemediation-EnableCWLoggingForSessionManager: This runbook enables logging of AWS Systems Manager Session Manager sessions to Amazon CloudWatch. It configures Session Manager to store session output logs in a CloudWatch log group. This allows monitoring and troubleshooting of Session Manager sessions. Use this runbook when you need to enable logging for Session Manager. It can help with auditing, security, and debugging of remote sessions to your EC2 instances. Based on the description, it seems this runbook specifically targets the integration between Session Manager and CloudWatch for logging purposes."
AWS-ExportOpsDataToS3,"AWS-ExportOpsDataToS3: This runbook retrieves OpsData summaries from AWS Systems Manager Explorer and exports them to an Amazon S3 bucket. It can be used to easily migrate OpsData between accounts or download for offline analysis. The runbook automates exporting OpsData, avoiding manual steps. It should be used when OpsData needs to be extracted from Explorer for backup, compliance or further processing outside of AWS. Specific context points: - Exports OpsData summaries, not raw data - Destination is an S3 bucket object - Automates exporting data from Explorer"
AWS-ExportPatchReportToS3,"AWS-ExportPatchReportToS3: This runbook retrieves patch summary data and patch details from AWS Systems Manager Patch Manager and exports the data as CSV files to an Amazon S3 bucket. It can be used to get a snapshot of patch compliance across your EC2 instances and on-premises servers managed by SSM. The exported CSV files provide details like missing patches, installed patches etc that can be analyzed to understand patch gaps. This comes in handy when you need to generate custom patch reports or integrate patch data with third party tools. As it exports to S3, the runbook enables persisting patch data for auditing needs."
AWS-SetupInventory,"AWS-SetupInventory: It creates a Systems Manager Inventory association for one or more AWS EC2 instances. This runbook associates the specified instances with the default inventory metadata collection schedule. The inventory metadata includes details like installed applications, network configurations, Windows updates, etc. This runbook is useful when you want to centrally collect inventory data from your EC2 instances into Systems Manager. It can help track configurations and installed software across your fleet of instances. Based on the context, this runbook sets up the inventory association so Systems Manager can periodically collect metadata from the target instances."
AWS-SetupManagedInstance,"AWS-SetupManagedInstance: This runbook configures an EC2 instance with an IAM role that grants access to AWS Systems Manager. It enables the instance to be managed by SSM by assigning a role with the required SSM permissions. This automates the process of setting up instances for use with SSM features like Run Command, State Manager, and Session Manager. It should be used when provisioning new instances that need to be managed and controlled via Systems Manager. The runbook handles attaching the SSM IAM role and related configuration to streamline instance setup."
AWS-SetupManagedRoleOnEC2Instance,"AWS-SetupManagedRoleOnEC2Instance: It configures an EC2 instance with the SSMRoleForManagedInstance IAM role for Systems Manager access. This runbook automates attaching the required IAM managed policy to an EC2 instance to enable Systems Manager capabilities. It should be used when setting up a new EC2 instance that needs to be managed by Systems Manager. The runbook handles attaching the required IAM role and policy to the instance, simplifying the process of enabling Systems Manager access. By using this automation document, you can quickly and consistently configure EC2 instances with the permissions required for Systems Manager management."
AWSSupport-TroubleshootManagedInstance,"AWSSupport-TroubleshootManagedInstance: This runbook troubleshoots issues with Amazon EC2 instances not reporting as managed by AWS Systems Manager. It reviews the VPC configuration for the instance including security groups, VPC endpoints, network ACLs, and route tables to identify misconfigurations preventing connectivity. The runbook also verifies the instance has an IAM role attached with required SSM permissions. This runbook is useful when debugging EC2 instances that should be managed by SSM but are not communicating properly. By automating checks of networking and IAM configurations, it simplifies troubleshooting instance connectivity issues with SSM."
AWSSupport-TroubleshootPatchManagerLinux,"AWSSupport-TroubleshootPatchManagerLinux: This runbook troubleshoots common patch failures on Linux-based managed nodes using Patch Manager. It identifies the root cause of a failed patch command and suggests remediation actions. 

This runbook considers the instance ID and command ID provided as input. It validates the command status, checks prerequisites, gets OS details, downloads a log analyzer package, and executes it to evaluate logs. Finally, it generates a report with the identified issue and solution.

This runbook is useful when Patch Manager patch commands fail on Linux instances. It can help diagnose the failure cause like missing packages, incorrect policies, etc. and provide specific steps to fix it. Key context points are that it targets Linux, relies on input parameters like instance and command IDs, and outputs a detailed troubleshooting report."
AWSSupport-TroubleshootSessionManager,"AWSSupport-TroubleshootSessionManager: This runbook helps diagnose and resolve issues connecting to Amazon EC2 instances with Session Manager in AWS Systems Manager. This runbook checks if the instance is managed by Systems Manager, verifies the SSM agent version, checks for recommended IAM policies, collects SSM logs, analyzes Session Manager preferences, and tests connectivity to required AWS services like KMS, S3, and CloudWatch. It can be used when troubleshooting failed connections to EC2 instances using Session Manager. This runbook automates analyzing common misconfigurations that prevent establishing sessions."
AWS-CreateJiraIssue,"AWS-CreateJiraIssue: This runbook automates creating issues in Jira, a popular project management tool. It can be used to open tickets for bugs, new features, or other work items that need to be tracked. The runbook likely uses AWS integrations with Jira to connect and create the new issues programmatically. This eliminates the need to manually create issues in the Jira UI. It could be triggered by monitoring systems to auto-file tickets, or incorporated into CI/CD pipelines to track deployments and changes. Overall, it automates issue creation in Jira from AWS services."
AWS-CreateServiceNowIncident,AWS-CreateServiceNowIncident: This runbook automates the creation of incidents in ServiceNow. It integrates AWS with the ServiceNow incident management system. The runbook can be used to open tickets and track issues in ServiceNow from AWS. It provides an automated way to create and manage incidents in ServiceNow from AWS services. This is useful for organizations using ServiceNow for IT Service Management that want to leverage AWS automation to streamline incident creation and management between the two systems.
AWS-RunPacker,"AWS-RunPacker: This is an automation runbook that uses HashiCorp Packer to build, validate, or fix machine images through packer templates in AWS. This runbook leverages Packer v1.7.2 to take packer template files and process them to output machine images, while handling steps like image validation and configuration. The runbook is useful for automating image building pipelines and keeping machine images up-to-date. It requires specifying a VPC ID and public subnet ID to build images, with the ability to associate public IPs. Overall, this runbook automates image creation workflows using Packer templates."
AWSSupport-ConfigureDNSQueryLogging,"AWSSupport-ConfigureDNSQueryLogging: This runbook configures DNS query logging for Amazon VPCs or Amazon Route 53 hosted zones. This runbook enables publishing query logs to CloudWatch Logs, S3, or Kinesis Data Firehose. It should be used when you need to troubleshoot DNS issues in your VPC or Route 53 zones by analyzing DNS query patterns and logs. The runbook sets up and configures the logging so you can monitor and analyze DNS behavior through the logs."
AWSSupport-ConfigureTrafficMirroring,"AWSSupport-ConfigureTrafficMirroring: It configures traffic mirroring in Amazon VPC to troubleshoot connectivity issues between load balancers and EC2 instances. This runbook creates required targets, filters, and sessions to copy inbound and outbound traffic from EC2 instance network interfaces. It mirrors all protocols except Amazon DNS by default, but rules can be modified post-automation for specific sources and destinations. Use this runbook when debugging connectivity between load balancers and backend EC2 instances in a VPC."
AWSSupport-ConnectivityTroubleshooter,"AWSSupport-ConnectivityTroubleshooter: This runbook diagnoses connectivity issues between resources in Amazon VPCs. It can check connectivity between resources within a VPC, across peered VPCs in the same region, from a VPC to the internet via an internet gateway, and from a VPC to the internet via a NAT gateway. This runbook is useful when you need to troubleshoot why certain resources cannot connect to each other over the network. It can help identify where the connectivity is failing between VPCs, subnets, security groups, route tables, gateways etc. By automating these checks, it simplifies diagnosing complex connectivity issues in Amazon VPC."
AWSSupport-TroubleshootVPN,"AWSSupport-TroubleshootVPN: It troubleshoots issues with AWS Site-to-Site VPN connections by analyzing CloudWatch logs. This runbook scans the specified VPN connection's CloudWatch log group for common IKEv1/IKEv2 errors and their resolutions. It should be used when troubleshooting connectivity issues with Site-to-Site VPNs. The runbook validates the input parameters, checks for valid log streams, and searches the logs for known VPN errors and resolutions. It provides the error details and suggested fixes in the output without modifying resources. Consider specifying the VPN connection ID, IKE version, IP addresses, and time range to analyze relevant logs."
AWSConfigRemediation-DeleteEgressOnlyInternetGateway,"AWSConfigRemediation-DeleteEgressOnlyInternetGateway: It deletes a specified egress-only internet gateway in Amazon VPC. This runbook should be used when you want to remove an egress-only internet gateway that is no longer needed. Consider the provided context that it targets Amazon VPC infrastructure. The runbook specifically removes the network component that allows outbound communication to the internet, while preventing inbound connections. This can help simplify VPC networking when outbound-only internet access is no longer required. Using this runbook automates the process of deleting the egress-only gateway, rather than needing to manually remove it."
AWSConfigRemediation-DeleteUnusedENI,"AWSConfigRemediation-DeleteUnusedENI: This runbook deletes unused elastic network interfaces (ENIs) in Amazon VPC. It checks for ENIs that are in a detached state and removes them. This helps clean up unused network resources and reduces costs. This runbook should be used when you want to periodically clean up any ENIs that are no longer attached to EC2 instances or other resources. It can be helpful if you frequently create and destroy EC2 instances but want to make sure the associated ENIs get deleted as well. Based on the context, this runbook focuses specifically on Amazon VPC resources and keeping the VPC environment tidy by removing detached ENIs. The generated description is 148 words."
AWSConfigRemediation-DeleteUnusedSecurityGroup,DeleteUnusedSecurityGroup: This runbook deletes unused Amazon EC2 security groups in an Amazon VPC. It takes the GroupId parameter to specify the security group to delete. The runbook fails if the security group is associated with an EC2 instance or referenced by another security group. Use this runbook to clean up unused security groups to reduce clutter and unused resources in your VPC. It should not be used to delete default security groups or those attached to resources.
AWSConfigRemediation-DeleteUnusedVPCNetworkACL,"AWSConfigRemediation-DeleteUnusedVPCNetworkACL: It deletes unused network access control lists (ACLs) in Amazon VPC. This runbook removes ACLs that are not associated with any subnets. It should be used when trying to clean up unused resources in a VPC to reduce costs. The runbook targets Amazon VPC specifically, scanning for ACLs with no subnet associations and deleting them. Based on the description, it focuses on identifying and removing ACLs that are not in use. Running this can help reduce unused resources that incur charges."
AWSConfigRemediation-DeleteVPCFlowLog,"AWSConfigRemediation-DeleteVPCFlowLog: It deletes a specified VPC flow log in Amazon VPC. This runbook should be used when you need to remove an existing flow log from a VPC. The runbook targets Amazon VPC to remove the specified flow log resource. Consider using this runbook when you no longer need a particular flow log, as flow logs incur charges while active. The runbook allows automated and controlled removal of VPC flow logs through Systems Manager Automation."
AWSConfigRemediation-DetachAndDeleteInternetGateway,"AWSConfigRemediation-DetachAndDeleteInternetGateway: This runbook detaches and deletes the specified internet gateway in Amazon VPC. It removes the gateway attachment from the VPC and then deletes the gateway itself. This runbook should be used when you want to disable internet access for a VPC. As per the description, it fails if there are any EC2 instances with elastic or public IPv4 addresses in the VPC, since deleting the gateway would break connectivity. Use this runbook to lock down access and enforce compliance by removing external gateways no longer needed."
AWSConfigRemediation-DetachAndDeleteVirtualPrivateGateway,"AWSConfigRemediation-DetachAndDeleteVirtualPrivateGateway: This runbook detaches and deletes an Amazon EC2 virtual private gateway attached to an Amazon VPC. It can be used when a virtual private gateway is no longer needed and should be removed from a VPC. The runbook takes the virtual private gateway ID as input and handles detaching it from the VPC route table(s) and subnet(s), then deleting the gateway itself. This automates the process of cleaning up unused virtual private gateways in your VPC networking environment."
AWS-DisablePublicAccessForSecurityGroup,"AWS-DisablePublicAccessForSecurityGroup: This runbook disables default SSH and RDP ports that are open to all IP addresses in Amazon VPC security groups. It removes inbound rules that allow unrestricted access over SSH or RDP. The runbook fails if the security group is in a non-default VPC and doesn't have open SSH/RDP ports specified for 0.0.0.0/0 or ::/0. This automates closing common security gaps, but isn't available in AWS China regions. Use when you need to quickly restrict SSH/RDP access to VPC security groups."
AWSConfigRemediation-DisableSubnetAutoAssignPublicIP,"AWSConfigRemediation-DisableSubnetAutoAssignPublicIP: This runbook disables public IP address auto-assignment for a specified VPC subnet in Amazon VPC. It modifies the subnet attribute to no longer automatically assign public IP addresses to instances launched in that subnet. This runbook should be used when you want to disable public internet access for instances in a private subnet. Based on the context, it targets Amazon VPC subnets and modifies their public IP auto-assign configuration. The runbook allows disabling public IP auto-assignment to increase security and prevent unintended public internet access from EC2 instances in private subnets."
AWSSupport-EnableVPCFlowLogs,"AWSSupport-EnableVPCFlowLogs: This runbook enables Amazon VPC Flow Logs for subnets, network interfaces, and VPCs in an AWS account. It publishes flow log data to CloudWatch Logs or S3 for monitoring network traffic. This runbook is useful for enabling flow logging across an AWS VPC to gain visibility into network traffic for security and troubleshooting. Key points are that it enables flow logs at the subnet, network interface, and VPC levels, and publishes logs to CloudWatch or S3. The runbook handles the process of enabling flow logs across an AWS VPC."
AWSConfigRemediation-EnableVPCFlowLogsToCloudWatch,"AWSConfigRemediation-EnableVPCFlowLogsToCloudWatch: This runbook modifies an existing Amazon VPC flow log in AWS to send its log data to CloudWatch Logs instead of Amazon S3. It should be used when you want to centralize VPC flow log data in CloudWatch Logs for monitoring, analysis, and alerting. This runbook replaces the flow log destination from Amazon S3 to a specified CloudWatch Logs log group, providing a centralized location for VPC flow logs. It leverages AWS Systems Manager Automation to programmatically make this change across accounts and regions."
AWSConfigRemediation-EnableVPCFlowLogsToS3Bucket,"AWSConfigRemediation-EnableVPCFlowLogsToS3Bucket: This runbook replaces existing Amazon VPC flow logs that publish data to CloudWatch Logs with flow logs that publish to an S3 bucket instead. It should be used when you want to store VPC flow log data in S3 for long-term retention or analytics. By specifying an S3 bucket, this automates enabling flow logs to persistently store VPC network traffic data. It leverages AWS Systems Manager Automation to update flow log configurations. This targets Amazon VPC resources to change where flow logs are published."
AWS-ReleaseElasticIP,AWS-ReleaseElasticIP: It releases an Elastic IP address in Amazon VPC. This runbook should be used when you want to free up an Elastic IP address that is no longer needed. The runbook takes the allocation ID of the Elastic IP address as input and releases it back into the pool of available Elastic IP addresses. This can help reduce costs by freeing up Elastic IP addresses that are not in use. The runbook automates the process of releasing the Elastic IP address without needing to use the VPC console or API calls.
AWSConfigRemediation-RemoveUnrestrictedSourceIngressRules,"AWSConfigRemediation-RemoveUnrestrictedSourceIngressRules: This runbook removes all ingress rules from a specified Amazon VPC security group that allow traffic from all source IP addresses (0.0.0.0/0). It helps remediate violations of the AWS Config rule that requires restricting inbound traffic to only necessary IP addresses. This runbook should be used when you want to tighten security by removing overly permissive ingress rules. It takes the security group ID as input and iterates through the rules, deleting any that allow unrestricted inbound access. This automates the process of reviewing and restricting security group rules to least privilege access."
AWSConfigRemediation-RemoveVPCDefaultSecurityGroupRules,"AWSConfigRemediation-RemoveVPCDefaultSecurityGroupRules: This runbook removes all ingress and egress rules from the default security group of a specified VPC in AWS. It can be used to clean up overly permissive default security group rules and enforce least privilege access to resources in a VPC. By removing all rules, it essentially denies all inbound and outbound traffic to instances assigned to the default security group. This improves security by preventing unintended access. It should be used carefully to avoid breaking connectivity. Consider targeting specific rules rather than removing all default security group rules."
AWSSupport-SetupIPMonitoringFromVPC,"AWSSupport-SetupIPMonitoringFromVPC: This is an AWS SSM Automation runbook that sets up network monitoring in an Amazon VPC. It launches an Amazon EC2 instance in a specified subnet, and monitors selected target IP addresses by continuously running ping, MTR, traceroute and tracetcp tests. The results are stored in Amazon CloudWatch Logs for analyzing network patterns and trends. This runbook can be used for troubleshooting connectivity issues and monitoring network performance in a VPC. The generated logs and CloudWatch metrics allow easy visualization of latency and packet loss. CloudWatch alarms can also be configured to send notifications when thresholds are crossed."
AWSSupport-TerminateIPMonitoringFromVPC,"AWSSupport-TerminateIPMonitoringFromVPC: It terminates an IP monitoring test previously started in Amazon VPC. This runbook should be used when you want to stop and delete data related to an IP monitoring test that was initiated with AWSSupport-SetupIPMonitoringFromVPC. The runbook specifically targets tests started in Amazon VPC, so it is intended for cleaning up network monitoring in that service. Based on the description, it takes a test ID as input to know which test to terminate. This allows selectively stopping individual tests as needed."
AWSConfigRemediation-EnableWAFClassicLogging,"AWSConfigRemediation-EnableWAFClassicLogging: This runbook enables logging to Amazon Kinesis Data Firehose for a specified AWS WAF web ACL. This runbook should be used when you need to enable logging of web requests that are allowed or blocked by an AWS WAF web ACL, so that the log data can be analyzed in Kinesis Data Firehose. The runbook automates enabling WAF logging, which can otherwise require manual steps in the AWS Management Console."
AWSConfigRemediation-EnableWAFClassicRegionalLogging,AWSConfigRemediation-EnableWAFClassicRegionalLogging: This runbook enables logging of AWS WAF Classic web ACL traffic to Amazon Kinesis Data Firehose. This automates enabling WAF Classic logging to simplify compliance and security monitoring. It should be used when you need to enable logging for a WAF Classic web ACL to capture traffic data for analysis. The runbook targets a specific WAF Classic ACL and enables logging to Kinesis Firehose based on the provided configuration.
AWSConfigRemediation-EnableWAFV2Logging,"AWSConfigRemediation-EnableWAFV2Logging: This runbook enables logging for AWS WAF (AWS WAFV2) web access control lists (web ACLs) by associating a specified Amazon Kinesis Data Firehose delivery stream. It should be used when you need to turn on logging for your WAF web ACLs to capture detailed information about web requests for security analysis and auditing. This runbook automates enabling WAF logging by linking web ACLs with a Kinesis Firehose stream, avoiding the need to manually configure logging in the WAF console. Key points from the context are that it targets AWS WAFV2 web ACLs and requires a Kinesis Data Firehose delivery stream as input."
AWS-CreateWorkSpace,"AWS-CreateWorkSpace: It creates a new Amazon WorkSpaces virtual desktop, known as a WorkSpace, based on the input parameter values specified by the user. This SSM Automation runbook should be used when you need to provision a new virtual desktop environment in AWS WorkSpaces. The runbook handles launching a WorkSpace instance with the desired configuration like operating system, compute resources etc. specified by the user. It automates the process of deploying a ready-to-use cloud-based desktop environment that end users can access remotely. Consider using this runbook when you want to simplify and automate creation of new WorkSpaces instead of manually launching and configuring each one."
AWSSupport-RecoverWorkSpace,"AWSSupport-RecoverWorkSpace: This runbook performs recovery actions on Amazon WorkSpaces virtual desktops (WorkSpaces). It reboots unhealthy WorkSpaces and can restore or rebuild them based on specified input parameters. Restoring uses the most recent snapshots to recreate both root and user volumes. Rebuilding uses the bundle image and latest user volume snapshot, losing any customizations. This runbook should be used when troubleshooting and recovering unhealthy WorkSpaces, but may result in some data loss. Consider its destructive actions and review the Amazon WorkSpaces Administration Guide before running."
AWSConfigRemediation-UpdateXRayKMSKey,"AWSConfigRemediation-UpdateXRayKMSKey: It enables encryption on AWS X-Ray data using an AWS Key Management Service (AWS KMS) key in the AWS X-Ray service. This runbook should be used to encrypt X-Ray data according to minimum recommended security best practices. It can help ensure that sensitive X-Ray data is protected through encryption with a KMS key. As specified in the context, this runbook provides a baseline configuration to enable X-Ray encryption with a default KMS key. Multiple sets of X-Ray data can also be encrypted with different KMS keys based on an organization's security policies and compliance requirements."
